// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_BadMsOption
#include <BadMsOption.h>
#endif
#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_51753f3f8dc97fe6_490_new,"BadMsOption","new",0x8669cb32,"BadMsOption.new","Options.hx",490,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_51753f3f8dc97fe6_497_left,"BadMsOption","left",0x14d584f5,"BadMsOption.left","Options.hx",497,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_51753f3f8dc97fe6_506_right,"BadMsOption","right",0x9d0bdf2e,"BadMsOption.right","Options.hx",506,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_51753f3f8dc97fe6_514_onType,"BadMsOption","onType",0x6ec40fe7,"BadMsOption.onType","Options.hx",514,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_51753f3f8dc97fe6_520_updateDisplay,"BadMsOption","updateDisplay",0x443f048b,"BadMsOption.updateDisplay","Options.hx",520,0x9d9a0240)

void BadMsOption_obj::__construct(::String desc){
            	HX_STACKFRAME(&_hx_pos_51753f3f8dc97fe6_490_new)
HXLINE( 491)		super::__construct();
HXLINE( 492)		this->description = (desc + HX_(" (Press R to reset)",ec,e4,63,d7));
HXLINE( 493)		this->acceptType = true;
            	}

Dynamic BadMsOption_obj::__CreateEmpty() { return new BadMsOption_obj; }

void *BadMsOption_obj::_hx_vtable = 0;

Dynamic BadMsOption_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< BadMsOption_obj > _hx_result = new BadMsOption_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool BadMsOption_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x27a70eb9) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x27a70eb9;
	} else {
		return inClassId==(int)0x71374f80;
	}
}

bool BadMsOption_obj::left(){
            	HX_STACKFRAME(&_hx_pos_51753f3f8dc97fe6_497_left)
HXLINE( 498)		::hx::FieldRef((::flixel::FlxG_obj::save->data).mPtr,HX_("badMs",8b,b0,ae,ad))--;
HXLINE( 499)		if (::hx::IsLess( ::flixel::FlxG_obj::save->data->__Field(HX_("badMs",8b,b0,ae,ad),::hx::paccDynamic),0 )) {
HXLINE( 500)			::flixel::FlxG_obj::save->data->__SetField(HX_("badMs",8b,b0,ae,ad),0,::hx::paccDynamic);
            		}
HXLINE( 501)		this->display = this->updateDisplay();
HXLINE( 502)		return true;
            	}


bool BadMsOption_obj::right(){
            	HX_STACKFRAME(&_hx_pos_51753f3f8dc97fe6_506_right)
HXLINE( 507)		::hx::FieldRef((::flixel::FlxG_obj::save->data).mPtr,HX_("badMs",8b,b0,ae,ad))++;
HXLINE( 508)		this->display = this->updateDisplay();
HXLINE( 509)		return true;
            	}


void BadMsOption_obj::onType(::String _hx_char){
            	HX_STACKFRAME(&_hx_pos_51753f3f8dc97fe6_514_onType)
HXDLIN( 514)		if ((_hx_char.toLowerCase() == HX_("r",72,00,00,00))) {
HXLINE( 515)			::flixel::FlxG_obj::save->data->__SetField(HX_("badMs",8b,b0,ae,ad),135,::hx::paccDynamic);
            		}
            	}


::String BadMsOption_obj::updateDisplay(){
            	HX_STACKFRAME(&_hx_pos_51753f3f8dc97fe6_520_updateDisplay)
HXDLIN( 520)		return ((HX_("BAD: < ",af,60,69,03) + ::Std_obj::string( ::Dynamic(::flixel::FlxG_obj::save->data->__Field(HX_("badMs",8b,b0,ae,ad),::hx::paccDynamic)))) + HX_(" ms >",24,31,36,b5));
            	}



::hx::ObjectPtr< BadMsOption_obj > BadMsOption_obj::__new(::String desc) {
	::hx::ObjectPtr< BadMsOption_obj > __this = new BadMsOption_obj();
	__this->__construct(desc);
	return __this;
}

::hx::ObjectPtr< BadMsOption_obj > BadMsOption_obj::__alloc(::hx::Ctx *_hx_ctx,::String desc) {
	BadMsOption_obj *__this = (BadMsOption_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(BadMsOption_obj), true, "BadMsOption"));
	*(void **)__this = BadMsOption_obj::_hx_vtable;
	__this->__construct(desc);
	return __this;
}

BadMsOption_obj::BadMsOption_obj()
{
}

::hx::Val BadMsOption_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"left") ) { return ::hx::Val( left_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"right") ) { return ::hx::Val( right_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"onType") ) { return ::hx::Val( onType_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateDisplay") ) { return ::hx::Val( updateDisplay_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *BadMsOption_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *BadMsOption_obj_sStaticStorageInfo = 0;
#endif

static ::String BadMsOption_obj_sMemberFields[] = {
	HX_("left",07,08,b0,47),
	HX_("right",dc,0b,64,e9),
	HX_("onType",79,fb,92,ef),
	HX_("updateDisplay",39,8f,b8,86),
	::String(null()) };

::hx::Class BadMsOption_obj::__mClass;

void BadMsOption_obj::__register()
{
	BadMsOption_obj _hx_dummy;
	BadMsOption_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("BadMsOption",40,0a,3c,be);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(BadMsOption_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< BadMsOption_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = BadMsOption_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = BadMsOption_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

