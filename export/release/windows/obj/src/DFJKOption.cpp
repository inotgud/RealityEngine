// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_DFJKOption
#include <DFJKOption.h>
#endif
#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_OptionCata
#include <OptionCata.h>
#endif
#ifndef INCLUDED_OptionsMenu
#include <OptionsMenu.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c83b011b1ca270a7_75_new,"DFJKOption","new",0xfb5a698a,"DFJKOption.new","Options.hx",75,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_c83b011b1ca270a7_81_press,"DFJKOption","press",0x85470b2d,"DFJKOption.press","Options.hx",81,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_c83b011b1ca270a7_89_updateDisplay,"DFJKOption","updateDisplay",0xd7d600e3,"DFJKOption.updateDisplay","Options.hx",89,0x9d9a0240)

void DFJKOption_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_c83b011b1ca270a7_75_new)
HXLINE(  76)		super::__construct();
HXLINE(  77)		this->description = HX_("Edit your keybindings",f6,32,7c,5f);
            	}

Dynamic DFJKOption_obj::__CreateEmpty() { return new DFJKOption_obj; }

void *DFJKOption_obj::_hx_vtable = 0;

Dynamic DFJKOption_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DFJKOption_obj > _hx_result = new DFJKOption_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DFJKOption_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x27a70eb9) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x27a70eb9;
	} else {
		return inClassId==(int)0x302cc5bc;
	}
}

bool DFJKOption_obj::press(){
            	HX_STACKFRAME(&_hx_pos_c83b011b1ca270a7_81_press)
HXLINE(  82)		::OptionsMenu_obj::instance->selectedCatIndex = 4;
HXLINE(  83)		::OptionsMenu_obj::instance->switchCat(::OptionsMenu_obj::instance->options->__get(4).StaticCast<  ::OptionCata >(),false);
HXLINE(  84)		return false;
            	}


::String DFJKOption_obj::updateDisplay(){
            	HX_STACKFRAME(&_hx_pos_c83b011b1ca270a7_89_updateDisplay)
HXDLIN(  89)		return HX_("Edit Keybindings",17,eb,d4,a9);
            	}



::hx::ObjectPtr< DFJKOption_obj > DFJKOption_obj::__new() {
	::hx::ObjectPtr< DFJKOption_obj > __this = new DFJKOption_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< DFJKOption_obj > DFJKOption_obj::__alloc(::hx::Ctx *_hx_ctx) {
	DFJKOption_obj *__this = (DFJKOption_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(DFJKOption_obj), true, "DFJKOption"));
	*(void **)__this = DFJKOption_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

DFJKOption_obj::DFJKOption_obj()
{
}

::hx::Val DFJKOption_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"press") ) { return ::hx::Val( press_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateDisplay") ) { return ::hx::Val( updateDisplay_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DFJKOption_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *DFJKOption_obj_sStaticStorageInfo = 0;
#endif

static ::String DFJKOption_obj_sMemberFields[] = {
	HX_("press",83,53,88,c8),
	HX_("updateDisplay",39,8f,b8,86),
	::String(null()) };

::hx::Class DFJKOption_obj::__mClass;

void DFJKOption_obj::__register()
{
	DFJKOption_obj _hx_dummy;
	DFJKOption_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("DFJKOption",98,9c,38,d9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(DFJKOption_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< DFJKOption_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DFJKOption_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DFJKOption_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

