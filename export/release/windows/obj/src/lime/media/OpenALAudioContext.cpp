// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_lime_media_OpenALAudioContext
#include <lime/media/OpenALAudioContext.h>
#endif
#ifndef INCLUDED_lime_media_openal_ALC
#include <lime/media/openal/ALC.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_18837c5c516898e1_94_new,"lime.media.OpenALAudioContext","new",0x164bc3e3,"lime.media.OpenALAudioContext.new","lime/media/OpenALAudioContext.hx",94,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_133_closeDevice,"lime.media.OpenALAudioContext","closeDevice",0xa8f3b0f1,"lime.media.OpenALAudioContext.closeDevice","lime/media/OpenALAudioContext.hx",133,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_138_createContext,"lime.media.OpenALAudioContext","createContext",0xe4110396,"lime.media.OpenALAudioContext.createContext","lime/media/OpenALAudioContext.hx",138,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_172_destroyContext,"lime.media.OpenALAudioContext","destroyContext",0xaf4f8972,"lime.media.OpenALAudioContext.destroyContext","lime/media/OpenALAudioContext.hx",172,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_263_getContextsDevice,"lime.media.OpenALAudioContext","getContextsDevice",0xaa2fe153,"lime.media.OpenALAudioContext.getContextsDevice","lime/media/OpenALAudioContext.hx",263,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_270_getCurrentContext,"lime.media.OpenALAudioContext","getCurrentContext",0xa71dacaf,"lime.media.OpenALAudioContext.getCurrentContext","lime/media/OpenALAudioContext.hx",270,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_468_makeContextCurrent,"lime.media.OpenALAudioContext","makeContextCurrent",0x7164e475,"lime.media.OpenALAudioContext.makeContextCurrent","lime/media/OpenALAudioContext.hx",468,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_473_openDevice,"lime.media.OpenALAudioContext","openDevice",0x8d211add,"lime.media.OpenALAudioContext.openDevice","lime/media/OpenALAudioContext.hx",473,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_478_pauseDevice,"lime.media.OpenALAudioContext","pauseDevice",0xe2b472af,"lime.media.OpenALAudioContext.pauseDevice","lime/media/OpenALAudioContext.hx",478,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_483_processContext,"lime.media.OpenALAudioContext","processContext",0xf541dc9d,"lime.media.OpenALAudioContext.processContext","lime/media/OpenALAudioContext.hx",483,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_488_resumeDevice,"lime.media.OpenALAudioContext","resumeDevice",0x5a53be40,"lime.media.OpenALAudioContext.resumeDevice","lime/media/OpenALAudioContext.hx",488,0xee17aeeb)
HX_LOCAL_STACK_FRAME(_hx_pos_18837c5c516898e1_588_suspendContext,"lime.media.OpenALAudioContext","suspendContext",0x2828bb30,"lime.media.OpenALAudioContext.suspendContext","lime/media/OpenALAudioContext.hx",588,0xee17aeeb)
namespace lime{
namespace media{

void OpenALAudioContext_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_94_new)
            	}

Dynamic OpenALAudioContext_obj::__CreateEmpty() { return new OpenALAudioContext_obj; }

void *OpenALAudioContext_obj::_hx_vtable = 0;

Dynamic OpenALAudioContext_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< OpenALAudioContext_obj > _hx_result = new OpenALAudioContext_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool OpenALAudioContext_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1531d04d;
}

bool OpenALAudioContext_obj::closeDevice( ::Dynamic device){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_133_closeDevice)
HXDLIN( 133)		return ::lime::media::openal::ALC_obj::closeDevice(device);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OpenALAudioContext_obj,closeDevice,return )

 ::Dynamic OpenALAudioContext_obj::createContext( ::Dynamic device,::Array< int > attrlist){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_138_createContext)
HXDLIN( 138)		return ::lime::media::openal::ALC_obj::createContext(device,attrlist);
            	}


HX_DEFINE_DYNAMIC_FUNC2(OpenALAudioContext_obj,createContext,return )

void OpenALAudioContext_obj::destroyContext( ::Dynamic context){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_172_destroyContext)
HXLINE( 173)		if (::hx::IsNull( context )) {
HXLINE( 173)			return;
            		}
HXLINE( 174)		::lime::media::openal::ALC_obj::destroyContext(context);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OpenALAudioContext_obj,destroyContext,(void))

 ::Dynamic OpenALAudioContext_obj::getContextsDevice( ::Dynamic context){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_263_getContextsDevice)
HXLINE( 264)		if (::hx::IsNull( context )) {
HXLINE( 264)			return null();
            		}
HXLINE( 265)		return ::lime::media::openal::ALC_obj::getContextsDevice(context);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OpenALAudioContext_obj,getContextsDevice,return )

 ::Dynamic OpenALAudioContext_obj::getCurrentContext(){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_270_getCurrentContext)
HXDLIN( 270)		return ::lime::media::openal::ALC_obj::getCurrentContext();
            	}


HX_DEFINE_DYNAMIC_FUNC0(OpenALAudioContext_obj,getCurrentContext,return )

bool OpenALAudioContext_obj::makeContextCurrent( ::Dynamic context){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_468_makeContextCurrent)
HXDLIN( 468)		return ::lime::media::openal::ALC_obj::makeContextCurrent(context);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OpenALAudioContext_obj,makeContextCurrent,return )

 ::Dynamic OpenALAudioContext_obj::openDevice(::String deviceName){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_473_openDevice)
HXDLIN( 473)		return ::lime::media::openal::ALC_obj::openDevice(deviceName);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OpenALAudioContext_obj,openDevice,return )

void OpenALAudioContext_obj::pauseDevice( ::Dynamic device){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_478_pauseDevice)
HXDLIN( 478)		::lime::media::openal::ALC_obj::pauseDevice(device);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OpenALAudioContext_obj,pauseDevice,(void))

void OpenALAudioContext_obj::processContext( ::Dynamic context){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_483_processContext)
HXDLIN( 483)		::lime::media::openal::ALC_obj::processContext(context);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OpenALAudioContext_obj,processContext,(void))

void OpenALAudioContext_obj::resumeDevice( ::Dynamic device){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_488_resumeDevice)
HXDLIN( 488)		::lime::media::openal::ALC_obj::resumeDevice(device);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OpenALAudioContext_obj,resumeDevice,(void))

void OpenALAudioContext_obj::suspendContext( ::Dynamic context){
            	HX_STACKFRAME(&_hx_pos_18837c5c516898e1_588_suspendContext)
HXDLIN( 588)		::lime::media::openal::ALC_obj::suspendContext(context);
            	}


HX_DEFINE_DYNAMIC_FUNC1(OpenALAudioContext_obj,suspendContext,(void))


::hx::ObjectPtr< OpenALAudioContext_obj > OpenALAudioContext_obj::__new() {
	::hx::ObjectPtr< OpenALAudioContext_obj > __this = new OpenALAudioContext_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< OpenALAudioContext_obj > OpenALAudioContext_obj::__alloc(::hx::Ctx *_hx_ctx) {
	OpenALAudioContext_obj *__this = (OpenALAudioContext_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(OpenALAudioContext_obj), false, "lime.media.OpenALAudioContext"));
	*(void **)__this = OpenALAudioContext_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

OpenALAudioContext_obj::OpenALAudioContext_obj()
{
}

::hx::Val OpenALAudioContext_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"openDevice") ) { return ::hx::Val( openDevice_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"closeDevice") ) { return ::hx::Val( closeDevice_dyn() ); }
		if (HX_FIELD_EQ(inName,"pauseDevice") ) { return ::hx::Val( pauseDevice_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"resumeDevice") ) { return ::hx::Val( resumeDevice_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"createContext") ) { return ::hx::Val( createContext_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"destroyContext") ) { return ::hx::Val( destroyContext_dyn() ); }
		if (HX_FIELD_EQ(inName,"processContext") ) { return ::hx::Val( processContext_dyn() ); }
		if (HX_FIELD_EQ(inName,"suspendContext") ) { return ::hx::Val( suspendContext_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"getContextsDevice") ) { return ::hx::Val( getContextsDevice_dyn() ); }
		if (HX_FIELD_EQ(inName,"getCurrentContext") ) { return ::hx::Val( getCurrentContext_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"makeContextCurrent") ) { return ::hx::Val( makeContextCurrent_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *OpenALAudioContext_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *OpenALAudioContext_obj_sStaticStorageInfo = 0;
#endif

static ::String OpenALAudioContext_obj_sMemberFields[] = {
	HX_("closeDevice",6e,02,c8,2b),
	HX_("createContext",53,6e,ba,01),
	HX_("destroyContext",15,84,e3,85),
	HX_("getContextsDevice",90,ee,91,9c),
	HX_("getCurrentContext",ec,b9,7f,99),
	HX_("makeContextCurrent",98,6c,ce,94),
	HX_("openDevice",00,48,14,bf),
	HX_("pauseDevice",2c,c4,88,65),
	HX_("processContext",40,d7,d5,cb),
	HX_("resumeDevice",23,ba,46,51),
	HX_("suspendContext",d3,b5,bc,fe),
	::String(null()) };

::hx::Class OpenALAudioContext_obj::__mClass;

void OpenALAudioContext_obj::__register()
{
	OpenALAudioContext_obj _hx_dummy;
	OpenALAudioContext_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("lime.media.OpenALAudioContext",71,96,c5,05);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(OpenALAudioContext_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< OpenALAudioContext_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = OpenALAudioContext_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = OpenALAudioContext_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace media
