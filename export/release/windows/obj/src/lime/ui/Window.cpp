// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_lime__internal_backend_native_NativeWindow
#include <lime/_internal/backend/native/NativeWindow.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_Int_Void
#include <lime/app/_Event_Float_Float_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_Void
#include <lime/app/_Event_Float_Float_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_lime_ui_MouseButton_Void
#include <lime/app/_Event_Float_Float_lime_ui_MouseButton_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Float_Float_lime_ui_MouseWheelMode_Void
#include <lime/app/_Event_Float_Float_lime_ui_MouseWheelMode_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Int_Void
#include <lime/app/_Event_Int_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_String_Int_Int_Void
#include <lime/app/_Event_String_Int_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_String_Void
#include <lime/app/_Event_String_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Void_Void
#include <lime/app/_Event_Void_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_graphics_RenderContext_Void
#include <lime/app/_Event_lime_graphics_RenderContext_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void
#include <lime/app/_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void.h>
#endif
#ifndef INCLUDED_lime_graphics_RenderContext
#include <lime/graphics/RenderContext.h>
#endif
#ifndef INCLUDED_lime_system_DisplayMode
#include <lime/system/DisplayMode.h>
#endif
#ifndef INCLUDED_lime_ui_Gamepad
#include <lime/ui/Gamepad.h>
#endif
#ifndef INCLUDED_lime_ui_MouseCursor
#include <lime/ui/MouseCursor.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_29_new,"lime.ui.Window","new",0xbff4f5c3,"lime.ui.Window.new","lime/ui/Window.hx",29,0x6ac7286d)
static const ::String _hx_array_data_feb85851_1[] = {
	HX_("8f0e1200000000000000504944564944,Acme,platform:Windows,x:b2,a:b0,b:b1,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2",ed,81,eb,0e),HX_("341a3608000000000000504944564944,Afterglow PS3 Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Windows",47,be,1b,97),HX_("ffff0000000000000000504944564944,GameStop Gamepad,a:b0,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b2,y:b3,platform:Windows",88,0e,d0,59),HX_("6d0416c2000000000000504944564944,Generic DirectInput Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Windows",97,eb,af,ec),HX_("0d0f6e00000000000000504944564944,HORIPAD 4,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows",3c,36,6f,05),HX_("6d0419c2000000000000504944564944,Logitech F710 Gamepad,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,platform:Windows",ec,fa,73,9a),HX_("88880803000000000000504944564944,PS3 Controller,a:b2,b:b1,back:b8,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b9,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:b7,rightx:a3,righty:a4,start:b11,x:b0,y:b3,platform:Windows",d1,e7,43,f6),HX_("4c056802000000000000504944564944,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,platform:Windows",e3,59,65,63),HX_("25090500000000000000504944564944,PS3 DualShock,a:b2,b:b1,back:b9,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b6,leftstick:b10,lefttrigger:b4,leftx:a0,lefty:a1,rightshoulder:b7,rightstick:b11,righttrigger:b5,rightx:a2,righty:a3,start:b8,x:b0,y:b3,platform:Windows",fa,a8,e3,31),HX_("4c05c405000000000000504944564944,Sony DualShock 4,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Windows",b5,bf,45,e5),HX_("4c05cc09000000000000504944564944,Sony DualShock 4,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Windows",28,c0,ca,2a),HX_("4c05a00b000000000000504944564944,Sony DualShock 4 Wireless Adaptor,a:b1,b:b2,y:b3,x:b0,start:b9,guide:b12,back:b13,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:a3,righttrigger:a4,platform:Windows",01,d3,4f,e8),HX_("6d0418c2000000000000504944564944,Logitech RumblePad 2 USB,platform:Windows,x:b0,a:b1,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3",c2,6f,63,a2),HX_("36280100000000000000504944564944,OUYA Controller,platform:Windows,a:b0,b:b3,y:b2,x:b1,start:b14,guide:b15,leftstick:b6,rightstick:b7,leftshoulder:b4,rightshoulder:b5,dpup:b8,dpleft:b10,dpdown:b9,dpright:b11,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:b12,righttrigger:b13",09,f1,71,18),HX_("4f0400b3000000000000504944564944,Thrustmaster Firestorm Dual Power,a:b0,b:b2,y:b3,x:b1,start:b10,guide:b8,back:b9,leftstick:b11,rightstick:b12,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b5,righttrigger:b7,platform:Windows",07,24,ed,25),HX_("00f00300000000000000504944564944,RetroUSB.com RetroPad,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Windows",79,f3,bd,51),HX_("00f0f100000000000000504944564944,RetroUSB.com Super RetroPort,a:b1,b:b5,x:b0,y:b4,back:b2,start:b3,leftshoulder:b6,rightshoulder:b7,leftx:a0,lefty:a1,platform:Windows",d8,a7,57,6a),HX_("28040140000000000000504944564944,GamePad Pro USB,platform:Windows,a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,lefttrigger:b6,righttrigger:b7",33,16,de,47),HX_("ff113133000000000000504944564944,SVEN X-PAD,platform:Windows,a:b2,b:b3,y:b1,x:b0,start:b5,back:b4,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b8,righttrigger:b9",82,51,40,68),HX_("8f0e0300000000000000504944564944,Piranha xtreme,platform:Windows,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b6,lefttrigger:b4,rightshoulder:b7,righttrigger:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2",59,24,e0,70),HX_("8f0e0d31000000000000504944564944,Multilaser JS071 USB,platform:Windows,a:b1,b:b2,y:b3,x:b0,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7",4f,ad,07,7a),HX_("10080300000000000000504944564944,PS2 USB,platform:Windows,a:b2,b:b1,y:b0,x:b3,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a4,righty:a2,lefttrigger:b4,righttrigger:b5",15,db,c4,af),HX_("79000600000000000000504944564944,G-Shark GS-GP702,a:b2,b:b1,x:b3,y:b0,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b6,righttrigger:b7,platform:Windows",9e,d8,8a,03),HX_("4b12014d000000000000504944564944,NYKO AIRFLO,a:b0,b:b1,x:b2,y:b3,back:b8,guide:b10,start:b9,leftstick:a0,rightstick:a2,leftshoulder:a3,rightshoulder:b5,dpup:h0.1,dpdown:h0.0,dpleft:h0.8,dpright:h0.2,leftx:h0.6,lefty:h0.12,rightx:h0.9,righty:h0.4,lefttrigger:b6,righttrigger:b7,platform:Windows",45,f0,44,29),HX_("d6206dca000000000000504944564944,PowerA Pro Ex,a:b1,b:b2,x:b0,y:b3,back:b8,guide:b12,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.0,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows",94,81,92,90),HX_("a3060cff000000000000504944564944,Saitek P2500,a:b2,b:b3,y:b1,x:b0,start:b4,guide:b10,back:b5,leftstick:b8,rightstick:b9,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,platform:Windows",27,a3,a1,9d),HX_("4f0415b3000000000000504944564944,Thrustmaster Dual Analog 3.2,platform:Windows,x:b1,a:b0,b:b2,y:b3,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b5,rightshoulder:b6,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3",71,89,82,8d),HX_("6f0e1e01000000000000504944564944,Rock Candy Gamepad for PS3,platform:Windows,a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,guide:b12,leftshoulder:b4,rightshoulder:b5,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2",28,25,cc,ac),HX_("83056020000000000000504944564944,iBuffalo USB 2-axis 8-button Gamepad,a:b1,b:b0,y:b2,x:b3,start:b7,back:b6,leftshoulder:b4,rightshoulder:b5,leftx:a0,lefty:a1,platform:Windows",d2,40,0b,6f),HX_("10080100000000000000504944564944,PS1 USB,platform:Windows,a:b2,b:b1,x:b3,y:b0,back:b8,start:b9,leftshoulder:b6,rightshoulder:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b4,righttrigger:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2",df,a4,45,77),HX_("49190204000000000000504944564944,Ipega PG-9023,a:b0,b:b1,x:b3,y:b4,back:b10,start:b11,leftstick:b13,rightstick:b14,leftshoulder:b6,rightshoulder:b7,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a4,lefttrigger:b8,righttrigger:b9,platform:Windows",2c,53,8e,04),HX_("4f0423b3000000000000504944564944,Dual Trigger 3-in-1,a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a5,lefttrigger:b6,righttrigger:b7,platform:Windows",6a,33,a6,09),HX_("0d0f4900000000000000504944564944,Hatsune Miku Sho Controller,a:b1,b:b2,x:b0,y:b3,back:b8,guide:b12,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows",69,04,a6,e3),HX_("79004318000000000000504944564944,Mayflash GameCube Controller Adapter,platform:Windows,a:b1,b:b2,x:b0,y:b3,back:b0,start:b9,guide:b0,leftshoulder:b4,rightshoulder:b7,leftstick:b0,rightstick:b0,leftx:a0,lefty:a1,rightx:a5,righty:a2,lefttrigger:a3,righttrigger:a4,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2",ed,b0,53,24),HX_("79000018000000000000504944564944,Mayflash WiiU Pro Game Controller Adapter (DInput),a:b1,b:b2,x:b0,y:b3,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows",96,7c,24,29),HX_("2509e803000000000000504944564944,Mayflash Wii Classic Controller,a:b1,b:b0,x:b3,y:b2,back:b8,guide:b10,start:b9,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:b11,dpdown:b13,dpleft:b12,dpright:b14,leftx:a0,lefty:a1,rightx:a2,righty:a3,lefttrigger:b6,righttrigger:b7,platform:Windows",94,e4,d6,92),HX_("300f1001000000000000504944564944,Saitek P480 Rumble Pad,a:b2,b:b3,x:b0,y:b1,back:b8,start:b9,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b6,dpup:h0.1,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,leftx:a0,lefty:a1,rightx:a3,righty:a2,lefttrigger:b5,righttrigger:b7,platform:Windows",6f,c3,ef,09),HX_("10280900000000000000504944564944,8Bitdo SFC30 GamePad,a:b1,b:b0,y:b3,x:b4,start:b11,back:b10,leftshoulder:b6,leftx:a0,lefty:a1,rightshoulder:b7,platform:Windows",3a,c1,e6,9b),HX_("63252305000000000000504944564944,USB Vibration Joystick (BM),platform:Windows,x:b3,a:b2,b:b1,y:b0,back:b8,start:b9,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,dpup:h0.1,leftshoulder:b4,lefttrigger:b6,rightshoulder:b5,righttrigger:b7,leftstick:b10,rightstick:b11,leftx:a0,lefty:a1,rightx:a2,righty:a3",85,86,df,08),HX_("20380900000000000000504944564944,8Bitdo NES30 PRO Wireless,platform:Windows,a:b0,b:b1,x:b3,y:b4,leftshoulder:b6,rightshoulder:b7,lefttrigger:b8,righttrigger:b9,back:b10,start:b11,leftstick:b13,rightstick:b14,leftx:a0,lefty:a1,rightx:a3,righty:a4,dpup:h0.1,dpright:h0.2,dpdown:h0.4,dpleft:h0.8",1d,7f,c6,ba),HX_("02200090000000000000504944564944,8Bitdo NES30 PRO USB,platform:Windows,a:b0,b:b1,x:b3,y:b4,leftshoulder:b6,rightshoulder:b7,lefttrigger:b8,righttrigger:b9,back:b10,start:b11,leftstick:b13,rightstick:b14,leftx:a0,lefty:a1,rightx:a3,righty:a4,dpup:h0.1,dpright:h0.2,dpdown:h0.4,dpleft:h0.8",f8,bb,2a,6f),HX_("ff113133000000000000504944564944,Gembird JPD-DualForce,platform:Windows,a:b2,b:b3,x:b0,y:b1,start:b9,back:b8,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b6,righttrigger:b7,leftstick:b10,rightstick:b11",dc,1d,6b,23),HX_("341a0108000000000000504944564944,EXEQ RF USB Gamepad 8206,a:b0,b:b1,x:b2,y:b3,leftshoulder:b4,rightshoulder:b5,leftstick:b8,rightstick:b7,back:b8,start:b9,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftx:a0,lefty:a1,rightx:a2,righty:a3,platform:Windows",b7,dc,97,32),HX_("c0111352000000000000504944564944,Battalife Joystick,platform:Windows,x:b4,a:b6,b:b7,y:b5,back:b2,start:b3,leftshoulder:b0,rightshoulder:b1,leftx:a0,lefty:a1",76,3c,b0,2d),HX_("100801e5000000000000504944564944,NEXT Classic USB Game Controller,a:b0,b:b1,back:b8,start:b9,rightx:a2,righty:a3,leftx:a0,lefty:a1,platform:Windows",e5,fe,d6,fe),HX_("79000600000000000000504944564944,NGS Phantom,a:b2,b:b3,y:b1,x:b0,start:b9,back:b8,leftstick:b10,rightstick:b11,leftshoulder:b4,rightshoulder:b5,dpup:h0.1,dpleft:h0.8,dpdown:h0.4,dpright:h0.2,leftx:a0,lefty:a1,rightx:a2,righty:a4,lefttrigger:b6,righttrigger:b7,platform:Windows",e5,16,6d,f8),
};
HX_LOCAL_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_362_alert,"lime.ui.Window","alert",0xe7cddb7f,"lime.ui.Window.alert","lime/ui/Window.hx",362,0x6ac7286d)
HX_LOCAL_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_367_close,"lime.ui.Window","close",0x0ea29bdb,"lime.ui.Window.close","lime/ui/Window.hx",367,0x6ac7286d)
HX_LOCAL_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_424_set_cursor,"lime.ui.Window","set_cursor",0x826d3a10,"lime.ui.Window.set_cursor","lime/ui/Window.hx",424,0x6ac7286d)
HX_LOCAL_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_434_get_displayMode,"lime.ui.Window","get_displayMode",0xe9ea583f,"lime.ui.Window.get_displayMode","lime/ui/Window.hx",434,0x6ac7286d)
HX_LOCAL_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_469_set_fullscreen,"lime.ui.Window","set_fullscreen",0x39a80a75,"lime.ui.Window.set_fullscreen","lime/ui/Window.hx",469,0x6ac7286d)
HX_LOCAL_STACK_FRAME(_hx_pos_ee84c8bd7ccb9d8c_554_set_title,"lime.ui.Window","set_title",0x948d2f9e,"lime.ui.Window.set_title","lime/ui/Window.hx",554,0x6ac7286d)
namespace lime{
namespace ui{

void Window_obj::__construct( ::lime::app::Application application, ::Dynamic attributes){
            	HX_GC_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_29_new)
HXLINE(  82)		this->onTextInput =  ::lime::app::_Event_String_Void_obj::__alloc( HX_CTX );
HXLINE(  81)		this->onTextEdit =  ::lime::app::_Event_String_Int_Int_Void_obj::__alloc( HX_CTX );
HXLINE(  80)		this->onRestore =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  79)		this->onResize =  ::lime::app::_Event_Int_Int_Void_obj::__alloc( HX_CTX );
HXLINE(  78)		this->onRenderContextRestored =  ::lime::app::_Event_lime_graphics_RenderContext_Void_obj::__alloc( HX_CTX );
HXLINE(  77)		this->onRenderContextLost =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  76)		this->onRender =  ::lime::app::_Event_lime_graphics_RenderContext_Void_obj::__alloc( HX_CTX );
HXLINE(  75)		this->onMove =  ::lime::app::_Event_Float_Float_Void_obj::__alloc( HX_CTX );
HXLINE(  74)		this->onMouseWheel =  ::lime::app::_Event_Float_Float_lime_ui_MouseWheelMode_Void_obj::__alloc( HX_CTX );
HXLINE(  73)		this->onMouseUp =  ::lime::app::_Event_Float_Float_Int_Void_obj::__alloc( HX_CTX );
HXLINE(  72)		this->onMouseMoveRelative =  ::lime::app::_Event_Float_Float_Void_obj::__alloc( HX_CTX );
HXLINE(  71)		this->onMouseMove =  ::lime::app::_Event_Float_Float_Void_obj::__alloc( HX_CTX );
HXLINE(  70)		this->onMouseDown =  ::lime::app::_Event_Float_Float_lime_ui_MouseButton_Void_obj::__alloc( HX_CTX );
HXLINE(  69)		this->onMinimize =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  68)		this->onMaximize =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  67)		this->onLeave =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  66)		this->onKeyUp =  ::lime::app::_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void_obj::__alloc( HX_CTX );
HXLINE(  65)		this->onKeyDown =  ::lime::app::_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void_obj::__alloc( HX_CTX );
HXLINE(  64)		this->onFullscreen =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  63)		this->onFocusOut =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  62)		this->onFocusIn =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  61)		this->onExpose =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  60)		this->onEnter =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  59)		this->onDropFile =  ::lime::app::_Event_String_Void_obj::__alloc( HX_CTX );
HXLINE(  58)		this->onDeactivate =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  57)		this->onClose =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE(  56)		this->onActivate =  ::lime::app::_Event_Void_Void_obj::__alloc( HX_CTX );
HXLINE( 139)		this->application = application;
HXLINE( 140)		 ::Dynamic _hx_tmp;
HXDLIN( 140)		if (::hx::IsNotNull( attributes )) {
HXLINE( 140)			_hx_tmp = attributes;
            		}
            		else {
HXLINE( 140)			_hx_tmp =  ::Dynamic(::hx::Anon_obj::Create(0));
            		}
HXDLIN( 140)		this->_hx___attributes = _hx_tmp;
HXLINE( 142)		if (::Reflect_obj::hasField(this->_hx___attributes,HX_("parameters",aa,be,7e,51))) {
HXLINE( 142)			this->parameters =  ::Dynamic(this->_hx___attributes->__Field(HX_("parameters",aa,be,7e,51),::hx::paccDynamic));
            		}
HXLINE( 144)		this->_hx___width = 0;
HXLINE( 145)		this->_hx___height = 0;
HXLINE( 146)		this->_hx___fullscreen = false;
HXLINE( 147)		this->_hx___scale = ( (Float)(1) );
HXLINE( 148)		this->_hx___x = 0;
HXLINE( 149)		this->_hx___y = 0;
HXLINE( 150)		this->_hx___title = HX_("",00,00,00,00);
HXLINE( 151)		this->id = -1;
HXLINE( 153)		this->_hx___backend =  ::lime::_internal::backend::native::NativeWindow_obj::__alloc( HX_CTX ,::hx::ObjectPtr<OBJ_>(this));
HXLINE( 156)		::Array< ::String > mappings = ::Array_obj< ::String >::fromData( _hx_array_data_feb85851_1,46);
HXLINE( 207)		::lime::ui::Gamepad_obj::addMappings(mappings);
            	}

Dynamic Window_obj::__CreateEmpty() { return new Window_obj; }

void *Window_obj::_hx_vtable = 0;

Dynamic Window_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Window_obj > _hx_result = new Window_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool Window_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7d946485;
}

void Window_obj::alert(::String message,::String title){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_362_alert)
HXDLIN( 362)		this->_hx___backend->alert(message,title);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Window_obj,alert,(void))

void Window_obj::close(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_367_close)
HXDLIN( 367)		this->_hx___backend->close();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,close,(void))

 ::lime::ui::MouseCursor Window_obj::set_cursor( ::lime::ui::MouseCursor value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_424_set_cursor)
HXDLIN( 424)		return this->_hx___backend->setCursor(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_cursor,return )

 ::lime::_hx_system::DisplayMode Window_obj::get_displayMode(){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_434_get_displayMode)
HXDLIN( 434)		return this->_hx___backend->getDisplayMode();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Window_obj,get_displayMode,return )

bool Window_obj::set_fullscreen(bool value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_469_set_fullscreen)
HXDLIN( 469)		return (this->_hx___fullscreen = this->_hx___backend->setFullscreen(value));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_fullscreen,return )

::String Window_obj::set_title(::String value){
            	HX_STACKFRAME(&_hx_pos_ee84c8bd7ccb9d8c_554_set_title)
HXDLIN( 554)		return (this->_hx___title = this->_hx___backend->setTitle(value));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Window_obj,set_title,return )


::hx::ObjectPtr< Window_obj > Window_obj::__new( ::lime::app::Application application, ::Dynamic attributes) {
	::hx::ObjectPtr< Window_obj > __this = new Window_obj();
	__this->__construct(application,attributes);
	return __this;
}

::hx::ObjectPtr< Window_obj > Window_obj::__alloc(::hx::Ctx *_hx_ctx, ::lime::app::Application application, ::Dynamic attributes) {
	Window_obj *__this = (Window_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Window_obj), true, "lime.ui.Window"));
	*(void **)__this = Window_obj::_hx_vtable;
	__this->__construct(application,attributes);
	return __this;
}

Window_obj::Window_obj()
{
}

void Window_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Window);
	HX_MARK_MEMBER_NAME(application,"application");
	HX_MARK_MEMBER_NAME(context,"context");
	HX_MARK_MEMBER_NAME(id,"id");
	HX_MARK_MEMBER_NAME(onActivate,"onActivate");
	HX_MARK_MEMBER_NAME(onClose,"onClose");
	HX_MARK_MEMBER_NAME(onDeactivate,"onDeactivate");
	HX_MARK_MEMBER_NAME(onDropFile,"onDropFile");
	HX_MARK_MEMBER_NAME(onEnter,"onEnter");
	HX_MARK_MEMBER_NAME(onExpose,"onExpose");
	HX_MARK_MEMBER_NAME(onFocusIn,"onFocusIn");
	HX_MARK_MEMBER_NAME(onFocusOut,"onFocusOut");
	HX_MARK_MEMBER_NAME(onFullscreen,"onFullscreen");
	HX_MARK_MEMBER_NAME(onKeyDown,"onKeyDown");
	HX_MARK_MEMBER_NAME(onKeyUp,"onKeyUp");
	HX_MARK_MEMBER_NAME(onLeave,"onLeave");
	HX_MARK_MEMBER_NAME(onMaximize,"onMaximize");
	HX_MARK_MEMBER_NAME(onMinimize,"onMinimize");
	HX_MARK_MEMBER_NAME(onMouseDown,"onMouseDown");
	HX_MARK_MEMBER_NAME(onMouseMove,"onMouseMove");
	HX_MARK_MEMBER_NAME(onMouseMoveRelative,"onMouseMoveRelative");
	HX_MARK_MEMBER_NAME(onMouseUp,"onMouseUp");
	HX_MARK_MEMBER_NAME(onMouseWheel,"onMouseWheel");
	HX_MARK_MEMBER_NAME(onMove,"onMove");
	HX_MARK_MEMBER_NAME(onRender,"onRender");
	HX_MARK_MEMBER_NAME(onRenderContextLost,"onRenderContextLost");
	HX_MARK_MEMBER_NAME(onRenderContextRestored,"onRenderContextRestored");
	HX_MARK_MEMBER_NAME(onResize,"onResize");
	HX_MARK_MEMBER_NAME(onRestore,"onRestore");
	HX_MARK_MEMBER_NAME(onTextEdit,"onTextEdit");
	HX_MARK_MEMBER_NAME(onTextInput,"onTextInput");
	HX_MARK_MEMBER_NAME(parameters,"parameters");
	HX_MARK_MEMBER_NAME(stage,"stage");
	HX_MARK_MEMBER_NAME(_hx___attributes,"__attributes");
	HX_MARK_MEMBER_NAME(_hx___backend,"__backend");
	HX_MARK_MEMBER_NAME(_hx___fullscreen,"__fullscreen");
	HX_MARK_MEMBER_NAME(_hx___height,"__height");
	HX_MARK_MEMBER_NAME(_hx___hidden,"__hidden");
	HX_MARK_MEMBER_NAME(_hx___maximized,"__maximized");
	HX_MARK_MEMBER_NAME(_hx___minimized,"__minimized");
	HX_MARK_MEMBER_NAME(_hx___scale,"__scale");
	HX_MARK_MEMBER_NAME(_hx___title,"__title");
	HX_MARK_MEMBER_NAME(_hx___width,"__width");
	HX_MARK_MEMBER_NAME(_hx___x,"__x");
	HX_MARK_MEMBER_NAME(_hx___y,"__y");
	HX_MARK_END_CLASS();
}

void Window_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(application,"application");
	HX_VISIT_MEMBER_NAME(context,"context");
	HX_VISIT_MEMBER_NAME(id,"id");
	HX_VISIT_MEMBER_NAME(onActivate,"onActivate");
	HX_VISIT_MEMBER_NAME(onClose,"onClose");
	HX_VISIT_MEMBER_NAME(onDeactivate,"onDeactivate");
	HX_VISIT_MEMBER_NAME(onDropFile,"onDropFile");
	HX_VISIT_MEMBER_NAME(onEnter,"onEnter");
	HX_VISIT_MEMBER_NAME(onExpose,"onExpose");
	HX_VISIT_MEMBER_NAME(onFocusIn,"onFocusIn");
	HX_VISIT_MEMBER_NAME(onFocusOut,"onFocusOut");
	HX_VISIT_MEMBER_NAME(onFullscreen,"onFullscreen");
	HX_VISIT_MEMBER_NAME(onKeyDown,"onKeyDown");
	HX_VISIT_MEMBER_NAME(onKeyUp,"onKeyUp");
	HX_VISIT_MEMBER_NAME(onLeave,"onLeave");
	HX_VISIT_MEMBER_NAME(onMaximize,"onMaximize");
	HX_VISIT_MEMBER_NAME(onMinimize,"onMinimize");
	HX_VISIT_MEMBER_NAME(onMouseDown,"onMouseDown");
	HX_VISIT_MEMBER_NAME(onMouseMove,"onMouseMove");
	HX_VISIT_MEMBER_NAME(onMouseMoveRelative,"onMouseMoveRelative");
	HX_VISIT_MEMBER_NAME(onMouseUp,"onMouseUp");
	HX_VISIT_MEMBER_NAME(onMouseWheel,"onMouseWheel");
	HX_VISIT_MEMBER_NAME(onMove,"onMove");
	HX_VISIT_MEMBER_NAME(onRender,"onRender");
	HX_VISIT_MEMBER_NAME(onRenderContextLost,"onRenderContextLost");
	HX_VISIT_MEMBER_NAME(onRenderContextRestored,"onRenderContextRestored");
	HX_VISIT_MEMBER_NAME(onResize,"onResize");
	HX_VISIT_MEMBER_NAME(onRestore,"onRestore");
	HX_VISIT_MEMBER_NAME(onTextEdit,"onTextEdit");
	HX_VISIT_MEMBER_NAME(onTextInput,"onTextInput");
	HX_VISIT_MEMBER_NAME(parameters,"parameters");
	HX_VISIT_MEMBER_NAME(stage,"stage");
	HX_VISIT_MEMBER_NAME(_hx___attributes,"__attributes");
	HX_VISIT_MEMBER_NAME(_hx___backend,"__backend");
	HX_VISIT_MEMBER_NAME(_hx___fullscreen,"__fullscreen");
	HX_VISIT_MEMBER_NAME(_hx___height,"__height");
	HX_VISIT_MEMBER_NAME(_hx___hidden,"__hidden");
	HX_VISIT_MEMBER_NAME(_hx___maximized,"__maximized");
	HX_VISIT_MEMBER_NAME(_hx___minimized,"__minimized");
	HX_VISIT_MEMBER_NAME(_hx___scale,"__scale");
	HX_VISIT_MEMBER_NAME(_hx___title,"__title");
	HX_VISIT_MEMBER_NAME(_hx___width,"__width");
	HX_VISIT_MEMBER_NAME(_hx___x,"__x");
	HX_VISIT_MEMBER_NAME(_hx___y,"__y");
}

::hx::Val Window_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { return ::hx::Val( id ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"__x") ) { return ::hx::Val( _hx___x ); }
		if (HX_FIELD_EQ(inName,"__y") ) { return ::hx::Val( _hx___y ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"stage") ) { return ::hx::Val( stage ); }
		if (HX_FIELD_EQ(inName,"alert") ) { return ::hx::Val( alert_dyn() ); }
		if (HX_FIELD_EQ(inName,"close") ) { return ::hx::Val( close_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"onMove") ) { return ::hx::Val( onMove ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"context") ) { return ::hx::Val( context ); }
		if (HX_FIELD_EQ(inName,"onClose") ) { return ::hx::Val( onClose ); }
		if (HX_FIELD_EQ(inName,"onEnter") ) { return ::hx::Val( onEnter ); }
		if (HX_FIELD_EQ(inName,"onKeyUp") ) { return ::hx::Val( onKeyUp ); }
		if (HX_FIELD_EQ(inName,"onLeave") ) { return ::hx::Val( onLeave ); }
		if (HX_FIELD_EQ(inName,"__scale") ) { return ::hx::Val( _hx___scale ); }
		if (HX_FIELD_EQ(inName,"__title") ) { return ::hx::Val( _hx___title ); }
		if (HX_FIELD_EQ(inName,"__width") ) { return ::hx::Val( _hx___width ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onExpose") ) { return ::hx::Val( onExpose ); }
		if (HX_FIELD_EQ(inName,"onRender") ) { return ::hx::Val( onRender ); }
		if (HX_FIELD_EQ(inName,"onResize") ) { return ::hx::Val( onResize ); }
		if (HX_FIELD_EQ(inName,"__height") ) { return ::hx::Val( _hx___height ); }
		if (HX_FIELD_EQ(inName,"__hidden") ) { return ::hx::Val( _hx___hidden ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"onFocusIn") ) { return ::hx::Val( onFocusIn ); }
		if (HX_FIELD_EQ(inName,"onKeyDown") ) { return ::hx::Val( onKeyDown ); }
		if (HX_FIELD_EQ(inName,"onMouseUp") ) { return ::hx::Val( onMouseUp ); }
		if (HX_FIELD_EQ(inName,"onRestore") ) { return ::hx::Val( onRestore ); }
		if (HX_FIELD_EQ(inName,"__backend") ) { return ::hx::Val( _hx___backend ); }
		if (HX_FIELD_EQ(inName,"set_title") ) { return ::hx::Val( set_title_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onActivate") ) { return ::hx::Val( onActivate ); }
		if (HX_FIELD_EQ(inName,"onDropFile") ) { return ::hx::Val( onDropFile ); }
		if (HX_FIELD_EQ(inName,"onFocusOut") ) { return ::hx::Val( onFocusOut ); }
		if (HX_FIELD_EQ(inName,"onMaximize") ) { return ::hx::Val( onMaximize ); }
		if (HX_FIELD_EQ(inName,"onMinimize") ) { return ::hx::Val( onMinimize ); }
		if (HX_FIELD_EQ(inName,"onTextEdit") ) { return ::hx::Val( onTextEdit ); }
		if (HX_FIELD_EQ(inName,"parameters") ) { return ::hx::Val( parameters ); }
		if (HX_FIELD_EQ(inName,"set_cursor") ) { return ::hx::Val( set_cursor_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"application") ) { return ::hx::Val( application ); }
		if (HX_FIELD_EQ(inName,"displayMode") ) { if (inCallProp == ::hx::paccAlways) return ::hx::Val( get_displayMode() ); }
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { return ::hx::Val( onMouseDown ); }
		if (HX_FIELD_EQ(inName,"onMouseMove") ) { return ::hx::Val( onMouseMove ); }
		if (HX_FIELD_EQ(inName,"onTextInput") ) { return ::hx::Val( onTextInput ); }
		if (HX_FIELD_EQ(inName,"__maximized") ) { return ::hx::Val( _hx___maximized ); }
		if (HX_FIELD_EQ(inName,"__minimized") ) { return ::hx::Val( _hx___minimized ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onDeactivate") ) { return ::hx::Val( onDeactivate ); }
		if (HX_FIELD_EQ(inName,"onFullscreen") ) { return ::hx::Val( onFullscreen ); }
		if (HX_FIELD_EQ(inName,"onMouseWheel") ) { return ::hx::Val( onMouseWheel ); }
		if (HX_FIELD_EQ(inName,"__attributes") ) { return ::hx::Val( _hx___attributes ); }
		if (HX_FIELD_EQ(inName,"__fullscreen") ) { return ::hx::Val( _hx___fullscreen ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"set_fullscreen") ) { return ::hx::Val( set_fullscreen_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_displayMode") ) { return ::hx::Val( get_displayMode_dyn() ); }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"onMouseMoveRelative") ) { return ::hx::Val( onMouseMoveRelative ); }
		if (HX_FIELD_EQ(inName,"onRenderContextLost") ) { return ::hx::Val( onRenderContextLost ); }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"onRenderContextRestored") ) { return ::hx::Val( onRenderContextRestored ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Window_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"id") ) { id=inValue.Cast< int >(); return inValue; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"__x") ) { _hx___x=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__y") ) { _hx___y=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"stage") ) { stage=inValue.Cast<  ::openfl::display::Stage >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"onMove") ) { onMove=inValue.Cast<  ::lime::app::_Event_Float_Float_Void >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"context") ) { context=inValue.Cast<  ::lime::graphics::RenderContext >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onClose") ) { onClose=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onEnter") ) { onEnter=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onKeyUp") ) { onKeyUp=inValue.Cast<  ::lime::app::_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onLeave") ) { onLeave=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__scale") ) { _hx___scale=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__title") ) { _hx___title=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__width") ) { _hx___width=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onExpose") ) { onExpose=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onRender") ) { onRender=inValue.Cast<  ::lime::app::_Event_lime_graphics_RenderContext_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onResize") ) { onResize=inValue.Cast<  ::lime::app::_Event_Int_Int_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__height") ) { _hx___height=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__hidden") ) { _hx___hidden=inValue.Cast< bool >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"onFocusIn") ) { onFocusIn=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onKeyDown") ) { onKeyDown=inValue.Cast<  ::lime::app::_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMouseUp") ) { onMouseUp=inValue.Cast<  ::lime::app::_Event_Float_Float_Int_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onRestore") ) { onRestore=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__backend") ) { _hx___backend=inValue.Cast<  ::lime::_internal::backend::native::NativeWindow >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"onActivate") ) { onActivate=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onDropFile") ) { onDropFile=inValue.Cast<  ::lime::app::_Event_String_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onFocusOut") ) { onFocusOut=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMaximize") ) { onMaximize=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMinimize") ) { onMinimize=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onTextEdit") ) { onTextEdit=inValue.Cast<  ::lime::app::_Event_String_Int_Int_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"parameters") ) { parameters=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"application") ) { application=inValue.Cast<  ::lime::app::Application >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMouseDown") ) { onMouseDown=inValue.Cast<  ::lime::app::_Event_Float_Float_lime_ui_MouseButton_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMouseMove") ) { onMouseMove=inValue.Cast<  ::lime::app::_Event_Float_Float_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onTextInput") ) { onTextInput=inValue.Cast<  ::lime::app::_Event_String_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__maximized") ) { _hx___maximized=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__minimized") ) { _hx___minimized=inValue.Cast< bool >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"onDeactivate") ) { onDeactivate=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onFullscreen") ) { onFullscreen=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onMouseWheel") ) { onMouseWheel=inValue.Cast<  ::lime::app::_Event_Float_Float_lime_ui_MouseWheelMode_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__attributes") ) { _hx___attributes=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"__fullscreen") ) { _hx___fullscreen=inValue.Cast< bool >(); return inValue; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"onMouseMoveRelative") ) { onMouseMoveRelative=inValue.Cast<  ::lime::app::_Event_Float_Float_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"onRenderContextLost") ) { onRenderContextLost=inValue.Cast<  ::lime::app::_Event_Void_Void >(); return inValue; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"onRenderContextRestored") ) { onRenderContextRestored=inValue.Cast<  ::lime::app::_Event_lime_graphics_RenderContext_Void >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Window_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("application",50,ab,3e,2a));
	outFields->push(HX_("context",ef,95,77,19));
	outFields->push(HX_("displayMode",c5,72,53,30));
	outFields->push(HX_("id",db,5b,00,00));
	outFields->push(HX_("onActivate",f2,ef,62,c3));
	outFields->push(HX_("onClose",19,b6,a0,de));
	outFields->push(HX_("onDeactivate",33,fe,44,14));
	outFields->push(HX_("onDropFile",8a,4a,0d,c7));
	outFields->push(HX_("onEnter",79,0b,c4,06));
	outFields->push(HX_("onExpose",c3,88,2a,a4));
	outFields->push(HX_("onFocusIn",7e,fe,2d,19));
	outFields->push(HX_("onFocusOut",d5,43,15,ef));
	outFields->push(HX_("onFullscreen",3a,dc,f7,d1));
	outFields->push(HX_("onKeyDown",42,22,f2,73));
	outFields->push(HX_("onKeyUp",3b,58,3c,75));
	outFields->push(HX_("onLeave",58,d3,90,08));
	outFields->push(HX_("onMaximize",0b,f9,15,b2));
	outFields->push(HX_("onMinimize",5d,13,30,ff));
	outFields->push(HX_("onMouseDown",08,94,05,11));
	outFields->push(HX_("onMouseMove",b7,7e,f8,16));
	outFields->push(HX_("onMouseMoveRelative",a3,06,bf,7a));
	outFields->push(HX_("onMouseUp",81,ac,1d,98));
	outFields->push(HX_("onMouseWheel",35,ca,ca,bf));
	outFields->push(HX_("onMove",d0,eb,ea,ea));
	outFields->push(HX_("onRender",d5,61,d6,e4));
	outFields->push(HX_("onRenderContextLost",9e,9b,a7,84));
	outFields->push(HX_("onRenderContextRestored",10,54,6e,7a));
	outFields->push(HX_("onResize",73,50,28,e8));
	outFields->push(HX_("onRestore",ef,1f,5b,42));
	outFields->push(HX_("onTextEdit",96,f1,c0,23));
	outFields->push(HX_("onTextInput",fe,36,4e,79));
	outFields->push(HX_("parameters",aa,be,7e,51));
	outFields->push(HX_("stage",be,6a,0b,84));
	outFields->push(HX_("__attributes",f7,23,05,d0));
	outFields->push(HX_("__backend",f4,0c,d6,7c));
	outFields->push(HX_("__fullscreen",5b,b5,47,32));
	outFields->push(HX_("__height",07,73,7b,aa));
	outFields->push(HX_("__hidden",8a,6a,c5,f4));
	outFields->push(HX_("__maximized",f8,56,0d,2d));
	outFields->push(HX_("__minimized",66,44,ca,56));
	outFields->push(HX_("__scale",6a,27,2d,e3));
	outFields->push(HX_("__title",78,6e,99,7a));
	outFields->push(HX_("__width",e6,0e,c1,34));
	outFields->push(HX_("__x",58,69,48,00));
	outFields->push(HX_("__y",59,69,48,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Window_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::lime::app::Application */ ,(int)offsetof(Window_obj,application),HX_("application",50,ab,3e,2a)},
	{::hx::fsObject /*  ::lime::graphics::RenderContext */ ,(int)offsetof(Window_obj,context),HX_("context",ef,95,77,19)},
	{::hx::fsInt,(int)offsetof(Window_obj,id),HX_("id",db,5b,00,00)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onActivate),HX_("onActivate",f2,ef,62,c3)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onClose),HX_("onClose",19,b6,a0,de)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onDeactivate),HX_("onDeactivate",33,fe,44,14)},
	{::hx::fsObject /*  ::lime::app::_Event_String_Void */ ,(int)offsetof(Window_obj,onDropFile),HX_("onDropFile",8a,4a,0d,c7)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onEnter),HX_("onEnter",79,0b,c4,06)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onExpose),HX_("onExpose",c3,88,2a,a4)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onFocusIn),HX_("onFocusIn",7e,fe,2d,19)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onFocusOut),HX_("onFocusOut",d5,43,15,ef)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onFullscreen),HX_("onFullscreen",3a,dc,f7,d1)},
	{::hx::fsObject /*  ::lime::app::_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void */ ,(int)offsetof(Window_obj,onKeyDown),HX_("onKeyDown",42,22,f2,73)},
	{::hx::fsObject /*  ::lime::app::_Event_lime_ui_KeyCode_lime_ui_KeyModifier_Void */ ,(int)offsetof(Window_obj,onKeyUp),HX_("onKeyUp",3b,58,3c,75)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onLeave),HX_("onLeave",58,d3,90,08)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onMaximize),HX_("onMaximize",0b,f9,15,b2)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onMinimize),HX_("onMinimize",5d,13,30,ff)},
	{::hx::fsObject /*  ::lime::app::_Event_Float_Float_lime_ui_MouseButton_Void */ ,(int)offsetof(Window_obj,onMouseDown),HX_("onMouseDown",08,94,05,11)},
	{::hx::fsObject /*  ::lime::app::_Event_Float_Float_Void */ ,(int)offsetof(Window_obj,onMouseMove),HX_("onMouseMove",b7,7e,f8,16)},
	{::hx::fsObject /*  ::lime::app::_Event_Float_Float_Void */ ,(int)offsetof(Window_obj,onMouseMoveRelative),HX_("onMouseMoveRelative",a3,06,bf,7a)},
	{::hx::fsObject /*  ::lime::app::_Event_Float_Float_Int_Void */ ,(int)offsetof(Window_obj,onMouseUp),HX_("onMouseUp",81,ac,1d,98)},
	{::hx::fsObject /*  ::lime::app::_Event_Float_Float_lime_ui_MouseWheelMode_Void */ ,(int)offsetof(Window_obj,onMouseWheel),HX_("onMouseWheel",35,ca,ca,bf)},
	{::hx::fsObject /*  ::lime::app::_Event_Float_Float_Void */ ,(int)offsetof(Window_obj,onMove),HX_("onMove",d0,eb,ea,ea)},
	{::hx::fsObject /*  ::lime::app::_Event_lime_graphics_RenderContext_Void */ ,(int)offsetof(Window_obj,onRender),HX_("onRender",d5,61,d6,e4)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onRenderContextLost),HX_("onRenderContextLost",9e,9b,a7,84)},
	{::hx::fsObject /*  ::lime::app::_Event_lime_graphics_RenderContext_Void */ ,(int)offsetof(Window_obj,onRenderContextRestored),HX_("onRenderContextRestored",10,54,6e,7a)},
	{::hx::fsObject /*  ::lime::app::_Event_Int_Int_Void */ ,(int)offsetof(Window_obj,onResize),HX_("onResize",73,50,28,e8)},
	{::hx::fsObject /*  ::lime::app::_Event_Void_Void */ ,(int)offsetof(Window_obj,onRestore),HX_("onRestore",ef,1f,5b,42)},
	{::hx::fsObject /*  ::lime::app::_Event_String_Int_Int_Void */ ,(int)offsetof(Window_obj,onTextEdit),HX_("onTextEdit",96,f1,c0,23)},
	{::hx::fsObject /*  ::lime::app::_Event_String_Void */ ,(int)offsetof(Window_obj,onTextInput),HX_("onTextInput",fe,36,4e,79)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Window_obj,parameters),HX_("parameters",aa,be,7e,51)},
	{::hx::fsObject /*  ::openfl::display::Stage */ ,(int)offsetof(Window_obj,stage),HX_("stage",be,6a,0b,84)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Window_obj,_hx___attributes),HX_("__attributes",f7,23,05,d0)},
	{::hx::fsObject /*  ::lime::_internal::backend::native::NativeWindow */ ,(int)offsetof(Window_obj,_hx___backend),HX_("__backend",f4,0c,d6,7c)},
	{::hx::fsBool,(int)offsetof(Window_obj,_hx___fullscreen),HX_("__fullscreen",5b,b5,47,32)},
	{::hx::fsInt,(int)offsetof(Window_obj,_hx___height),HX_("__height",07,73,7b,aa)},
	{::hx::fsBool,(int)offsetof(Window_obj,_hx___hidden),HX_("__hidden",8a,6a,c5,f4)},
	{::hx::fsBool,(int)offsetof(Window_obj,_hx___maximized),HX_("__maximized",f8,56,0d,2d)},
	{::hx::fsBool,(int)offsetof(Window_obj,_hx___minimized),HX_("__minimized",66,44,ca,56)},
	{::hx::fsFloat,(int)offsetof(Window_obj,_hx___scale),HX_("__scale",6a,27,2d,e3)},
	{::hx::fsString,(int)offsetof(Window_obj,_hx___title),HX_("__title",78,6e,99,7a)},
	{::hx::fsInt,(int)offsetof(Window_obj,_hx___width),HX_("__width",e6,0e,c1,34)},
	{::hx::fsInt,(int)offsetof(Window_obj,_hx___x),HX_("__x",58,69,48,00)},
	{::hx::fsInt,(int)offsetof(Window_obj,_hx___y),HX_("__y",59,69,48,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Window_obj_sStaticStorageInfo = 0;
#endif

static ::String Window_obj_sMemberFields[] = {
	HX_("application",50,ab,3e,2a),
	HX_("context",ef,95,77,19),
	HX_("id",db,5b,00,00),
	HX_("onActivate",f2,ef,62,c3),
	HX_("onClose",19,b6,a0,de),
	HX_("onDeactivate",33,fe,44,14),
	HX_("onDropFile",8a,4a,0d,c7),
	HX_("onEnter",79,0b,c4,06),
	HX_("onExpose",c3,88,2a,a4),
	HX_("onFocusIn",7e,fe,2d,19),
	HX_("onFocusOut",d5,43,15,ef),
	HX_("onFullscreen",3a,dc,f7,d1),
	HX_("onKeyDown",42,22,f2,73),
	HX_("onKeyUp",3b,58,3c,75),
	HX_("onLeave",58,d3,90,08),
	HX_("onMaximize",0b,f9,15,b2),
	HX_("onMinimize",5d,13,30,ff),
	HX_("onMouseDown",08,94,05,11),
	HX_("onMouseMove",b7,7e,f8,16),
	HX_("onMouseMoveRelative",a3,06,bf,7a),
	HX_("onMouseUp",81,ac,1d,98),
	HX_("onMouseWheel",35,ca,ca,bf),
	HX_("onMove",d0,eb,ea,ea),
	HX_("onRender",d5,61,d6,e4),
	HX_("onRenderContextLost",9e,9b,a7,84),
	HX_("onRenderContextRestored",10,54,6e,7a),
	HX_("onResize",73,50,28,e8),
	HX_("onRestore",ef,1f,5b,42),
	HX_("onTextEdit",96,f1,c0,23),
	HX_("onTextInput",fe,36,4e,79),
	HX_("parameters",aa,be,7e,51),
	HX_("stage",be,6a,0b,84),
	HX_("__attributes",f7,23,05,d0),
	HX_("__backend",f4,0c,d6,7c),
	HX_("__fullscreen",5b,b5,47,32),
	HX_("__height",07,73,7b,aa),
	HX_("__hidden",8a,6a,c5,f4),
	HX_("__maximized",f8,56,0d,2d),
	HX_("__minimized",66,44,ca,56),
	HX_("__scale",6a,27,2d,e3),
	HX_("__title",78,6e,99,7a),
	HX_("__width",e6,0e,c1,34),
	HX_("__x",58,69,48,00),
	HX_("__y",59,69,48,00),
	HX_("alert",5c,57,8e,21),
	HX_("close",b8,17,63,48),
	HX_("set_cursor",13,9d,ed,32),
	HX_("get_displayMode",5c,2a,35,f1),
	HX_("set_fullscreen",f8,aa,c9,8f),
	HX_("set_title",fb,5d,35,37),
	::String(null()) };

::hx::Class Window_obj::__mClass;

void Window_obj::__register()
{
	Window_obj _hx_dummy;
	Window_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("lime.ui.Window",51,58,b8,fe);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Window_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Window_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Window_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Window_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace ui
