// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_lime_utils_BytePointerData
#include <lime/utils/BytePointerData.h>
#endif
#ifndef INCLUDED_lime_utils__DataPointer_DataPointer_Impl_
#include <lime/utils/_DataPointer/DataPointer_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_21__new,"lime.utils._DataPointer.DataPointer_Impl_","_new",0x3b176380,"lime.utils._DataPointer.DataPointer_Impl_._new","lime/utils/DataPointer.hx",21,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_28_fromInt,"lime.utils._DataPointer.DataPointer_Impl_","fromInt",0xca24ece6,"lime.utils._DataPointer.DataPointer_Impl_.fromInt","lime/utils/DataPointer.hx",28,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_63_fromBytesPointer,"lime.utils._DataPointer.DataPointer_Impl_","fromBytesPointer",0x01727cbb,"lime.utils._DataPointer.DataPointer_Impl_.fromBytesPointer","lime/utils/DataPointer.hx",63,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_77_fromArrayBufferView,"lime.utils._DataPointer.DataPointer_Impl_","fromArrayBufferView",0xced8dcf5,"lime.utils._DataPointer.DataPointer_Impl_.fromArrayBufferView","lime/utils/DataPointer.hx",77,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_91_fromArrayBuffer,"lime.utils._DataPointer.DataPointer_Impl_","fromArrayBuffer",0x4d148670,"lime.utils._DataPointer.DataPointer_Impl_.fromArrayBuffer","lime/utils/DataPointer.hx",91,0x48d01ae3)
HX_LOCAL_STACK_FRAME(_hx_pos_ac34df134646625a_101_fromBytes,"lime.utils._DataPointer.DataPointer_Impl_","fromBytes",0x4e5e1422,"lime.utils._DataPointer.DataPointer_Impl_.fromBytes","lime/utils/DataPointer.hx",101,0x48d01ae3)
namespace lime{
namespace utils{
namespace _DataPointer{

void DataPointer_Impl__obj::__construct() { }

Dynamic DataPointer_Impl__obj::__CreateEmpty() { return new DataPointer_Impl__obj; }

void *DataPointer_Impl__obj::_hx_vtable = 0;

Dynamic DataPointer_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< DataPointer_Impl__obj > _hx_result = new DataPointer_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool DataPointer_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7552d517;
}

Float DataPointer_Impl__obj::_new(Float data){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_21__new)
HXDLIN(  21)		Float this1 = data;
HXDLIN(  21)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,_new,return )

Float DataPointer_Impl__obj::fromInt(int value){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_28_fromInt)
HXLINE(  30)		Float _hx_float = ( (Float)(value) );
HXLINE(  31)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::_new(_hx_float);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromInt,return )

Float DataPointer_Impl__obj::fromBytesPointer( ::lime::utils::BytePointerData pointer){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_63_fromBytesPointer)
HXLINE(  65)		bool _hx_tmp;
HXDLIN(  65)		if (::hx::IsNotNull( pointer )) {
HXLINE(  65)			_hx_tmp = ::hx::IsNull( pointer->bytes );
            		}
            		else {
HXLINE(  65)			_hx_tmp = true;
            		}
HXDLIN(  65)		if (_hx_tmp) {
HXLINE(  65)			return ( (Float)(0) );
            		}
HXLINE(  66)		::cpp::Pointer< unsigned char > pointer1 = ( (::cpp::Pointer< unsigned char >)(::cpp::Pointer_obj::arrayElem(pointer->bytes->b,0)) );
HXDLIN(  66)		::cpp::Pointer< unsigned char > pointer2 = pointer1->add(pointer->offset);
HXDLIN(  66)		return (uintptr_t)pointer2->ptr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromBytesPointer,return )

Float DataPointer_Impl__obj::fromArrayBufferView( ::lime::utils::ArrayBufferView arrayBufferView){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_77_fromArrayBufferView)
HXLINE(  79)		if (::hx::IsNull( arrayBufferView )) {
HXLINE(  79)			return ( (Float)(0) );
            		}
HXLINE(  80)		::cpp::Pointer< unsigned char > pointer = ( (::cpp::Pointer< unsigned char >)(::cpp::Pointer_obj::arrayElem(arrayBufferView->buffer->b,0)) );
HXDLIN(  80)		::cpp::Pointer< unsigned char > pointer1 = pointer->add(arrayBufferView->byteOffset);
HXDLIN(  80)		return (uintptr_t)pointer1->ptr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromArrayBufferView,return )

Float DataPointer_Impl__obj::fromArrayBuffer( ::haxe::io::Bytes buffer){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_91_fromArrayBuffer)
HXLINE(  93)		if (::hx::IsNull( buffer )) {
HXLINE(  93)			return ( (Float)(0) );
            		}
HXLINE(  94)		return ::lime::utils::_DataPointer::DataPointer_Impl__obj::fromBytes(buffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromArrayBuffer,return )

Float DataPointer_Impl__obj::fromBytes( ::haxe::io::Bytes bytes){
            	HX_STACKFRAME(&_hx_pos_ac34df134646625a_101_fromBytes)
HXLINE( 103)		if (::hx::IsNull( bytes )) {
HXLINE( 103)			return ( (Float)(0) );
            		}
HXLINE( 104)		::cpp::Pointer< unsigned char > pointer = ( (::cpp::Pointer< unsigned char >)(::cpp::Pointer_obj::arrayElem(bytes->b,0)) );
HXDLIN( 104)		return (uintptr_t)pointer->ptr;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(DataPointer_Impl__obj,fromBytes,return )


DataPointer_Impl__obj::DataPointer_Impl__obj()
{
}

bool DataPointer_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"fromArrayBuffer") ) { outValue = fromArrayBuffer_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"fromBytesPointer") ) { outValue = fromBytesPointer_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"fromArrayBufferView") ) { outValue = fromArrayBufferView_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *DataPointer_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *DataPointer_Impl__obj_sStaticStorageInfo = 0;
#endif

::hx::Class DataPointer_Impl__obj::__mClass;

static ::String DataPointer_Impl__obj_sStaticFields[] = {
	HX_("_new",61,15,1f,3f),
	HX_("fromInt",a5,dd,fa,57),
	HX_("fromBytesPointer",1c,fc,ed,d8),
	HX_("fromArrayBufferView",34,70,74,c8),
	HX_("fromArrayBuffer",2f,ce,77,ec),
	HX_("fromBytes",a1,f2,20,72),
	::String(null())
};

void DataPointer_Impl__obj::__register()
{
	DataPointer_Impl__obj _hx_dummy;
	DataPointer_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("lime.utils._DataPointer.DataPointer_Impl_",af,c6,dc,04);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &DataPointer_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(DataPointer_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< DataPointer_Impl__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DataPointer_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DataPointer_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace utils
} // end namespace _DataPointer
