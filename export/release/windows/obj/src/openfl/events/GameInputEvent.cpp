// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_GameInputEvent
#include <openfl/events/GameInputEvent.h>
#endif
#ifndef INCLUDED_openfl_ui_GameInputDevice
#include <openfl/ui/GameInputDevice.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a9944c00dfbe9396_40_new,"openfl.events.GameInputEvent","new",0x8065662b,"openfl.events.GameInputEvent.new","openfl/events/GameInputEvent.hx",40,0x5318f185)
namespace openfl{
namespace events{

void GameInputEvent_obj::__construct(::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable, ::openfl::ui::GameInputDevice device){
            		bool bubbles = __o_bubbles.Default(true);
            		bool cancelable = __o_cancelable.Default(false);
            	HX_STACKFRAME(&_hx_pos_a9944c00dfbe9396_40_new)
HXLINE(  41)		super::__construct(type,bubbles,cancelable);
HXLINE(  43)		this->device = device;
            	}

Dynamic GameInputEvent_obj::__CreateEmpty() { return new GameInputEvent_obj; }

void *GameInputEvent_obj::_hx_vtable = 0;

Dynamic GameInputEvent_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GameInputEvent_obj > _hx_result = new GameInputEvent_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool GameInputEvent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x08ec4c31) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x08ec4c31;
	} else {
		return inClassId==(int)0x7f176b4b;
	}
}


::hx::ObjectPtr< GameInputEvent_obj > GameInputEvent_obj::__new(::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable, ::openfl::ui::GameInputDevice device) {
	::hx::ObjectPtr< GameInputEvent_obj > __this = new GameInputEvent_obj();
	__this->__construct(type,__o_bubbles,__o_cancelable,device);
	return __this;
}

::hx::ObjectPtr< GameInputEvent_obj > GameInputEvent_obj::__alloc(::hx::Ctx *_hx_ctx,::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable, ::openfl::ui::GameInputDevice device) {
	GameInputEvent_obj *__this = (GameInputEvent_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GameInputEvent_obj), true, "openfl.events.GameInputEvent"));
	*(void **)__this = GameInputEvent_obj::_hx_vtable;
	__this->__construct(type,__o_bubbles,__o_cancelable,device);
	return __this;
}

GameInputEvent_obj::GameInputEvent_obj()
{
}

void GameInputEvent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GameInputEvent);
	HX_MARK_MEMBER_NAME(device,"device");
	 ::openfl::events::Event_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void GameInputEvent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(device,"device");
	 ::openfl::events::Event_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val GameInputEvent_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"device") ) { return ::hx::Val( device ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val GameInputEvent_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"device") ) { device=inValue.Cast<  ::openfl::ui::GameInputDevice >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GameInputEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("device",96,dc,77,71));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo GameInputEvent_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::openfl::ui::GameInputDevice */ ,(int)offsetof(GameInputEvent_obj,device),HX_("device",96,dc,77,71)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *GameInputEvent_obj_sStaticStorageInfo = 0;
#endif

static ::String GameInputEvent_obj_sMemberFields[] = {
	HX_("device",96,dc,77,71),
	::String(null()) };

::hx::Class GameInputEvent_obj::__mClass;

void GameInputEvent_obj::__register()
{
	GameInputEvent_obj _hx_dummy;
	GameInputEvent_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.events.GameInputEvent",b9,74,3e,6a);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GameInputEvent_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GameInputEvent_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GameInputEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GameInputEvent_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace events
