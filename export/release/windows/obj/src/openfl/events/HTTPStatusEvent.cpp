// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
#ifndef INCLUDED_openfl_events_HTTPStatusEvent
#include <openfl/events/HTTPStatusEvent.h>
#endif
#ifndef INCLUDED_openfl_net_URLRequestHeader
#include <openfl/net/URLRequestHeader.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3e9f49414be9df9e_126_new,"openfl.events.HTTPStatusEvent","new",0x992d4c1b,"openfl.events.HTTPStatusEvent.new","openfl/events/HTTPStatusEvent.hx",126,0x9d0269d5)
namespace openfl{
namespace events{

void HTTPStatusEvent_obj::__construct(::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::hx::Null< int >  __o_status,::hx::Null< bool >  __o_redirected){
            		bool bubbles = __o_bubbles.Default(false);
            		bool cancelable = __o_cancelable.Default(false);
            		int status = __o_status.Default(0);
            		bool redirected = __o_redirected.Default(false);
            	HX_STACKFRAME(&_hx_pos_3e9f49414be9df9e_126_new)
HXLINE( 127)		this->status = status;
HXLINE( 128)		this->redirected = redirected;
HXLINE( 130)		super::__construct(type,bubbles,cancelable);
            	}

Dynamic HTTPStatusEvent_obj::__CreateEmpty() { return new HTTPStatusEvent_obj; }

void *HTTPStatusEvent_obj::_hx_vtable = 0;

Dynamic HTTPStatusEvent_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< HTTPStatusEvent_obj > _hx_result = new HTTPStatusEvent_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4]);
	return _hx_result;
}

bool HTTPStatusEvent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x08ec4c31) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x08ec4c31;
	} else {
		return inClassId==(int)0x10c88847;
	}
}


HTTPStatusEvent_obj::HTTPStatusEvent_obj()
{
}

void HTTPStatusEvent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(HTTPStatusEvent);
	HX_MARK_MEMBER_NAME(redirected,"redirected");
	HX_MARK_MEMBER_NAME(responseHeaders,"responseHeaders");
	HX_MARK_MEMBER_NAME(responseURL,"responseURL");
	HX_MARK_MEMBER_NAME(status,"status");
	 ::openfl::events::Event_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void HTTPStatusEvent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(redirected,"redirected");
	HX_VISIT_MEMBER_NAME(responseHeaders,"responseHeaders");
	HX_VISIT_MEMBER_NAME(responseURL,"responseURL");
	HX_VISIT_MEMBER_NAME(status,"status");
	 ::openfl::events::Event_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val HTTPStatusEvent_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"status") ) { return ::hx::Val( status ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"redirected") ) { return ::hx::Val( redirected ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"responseURL") ) { return ::hx::Val( responseURL ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"responseHeaders") ) { return ::hx::Val( responseHeaders ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val HTTPStatusEvent_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"status") ) { status=inValue.Cast< int >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"redirected") ) { redirected=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"responseURL") ) { responseURL=inValue.Cast< ::String >(); return inValue; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"responseHeaders") ) { responseHeaders=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void HTTPStatusEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("redirected",7b,4e,5a,3e));
	outFields->push(HX_("responseHeaders",c5,0d,ca,43));
	outFields->push(HX_("responseURL",6e,5f,19,86));
	outFields->push(HX_("status",32,e7,fb,05));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo HTTPStatusEvent_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(HTTPStatusEvent_obj,redirected),HX_("redirected",7b,4e,5a,3e)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(HTTPStatusEvent_obj,responseHeaders),HX_("responseHeaders",c5,0d,ca,43)},
	{::hx::fsString,(int)offsetof(HTTPStatusEvent_obj,responseURL),HX_("responseURL",6e,5f,19,86)},
	{::hx::fsInt,(int)offsetof(HTTPStatusEvent_obj,status),HX_("status",32,e7,fb,05)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *HTTPStatusEvent_obj_sStaticStorageInfo = 0;
#endif

static ::String HTTPStatusEvent_obj_sMemberFields[] = {
	HX_("redirected",7b,4e,5a,3e),
	HX_("responseHeaders",c5,0d,ca,43),
	HX_("responseURL",6e,5f,19,86),
	HX_("status",32,e7,fb,05),
	::String(null()) };

::hx::Class HTTPStatusEvent_obj::__mClass;

void HTTPStatusEvent_obj::__register()
{
	HTTPStatusEvent_obj _hx_dummy;
	HTTPStatusEvent_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.events.HTTPStatusEvent",a9,a2,c0,61);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(HTTPStatusEvent_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< HTTPStatusEvent_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = HTTPStatusEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = HTTPStatusEvent_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace openfl
} // end namespace events
