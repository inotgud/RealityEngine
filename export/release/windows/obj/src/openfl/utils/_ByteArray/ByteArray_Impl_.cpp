// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif
#ifndef INCLUDED_lime_utils_BytePointerData
#include <lime/utils/BytePointerData.h>
#endif
#ifndef INCLUDED_lime_utils__BytePointer_BytePointer_Impl_
#include <lime/utils/_BytePointer/BytePointer_Impl_.h>
#endif
#ifndef INCLUDED_openfl_utils_ByteArrayData
#include <openfl/utils/ByteArrayData.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataInput
#include <openfl/utils/IDataInput.h>
#endif
#ifndef INCLUDED_openfl_utils_IDataOutput
#include <openfl/utils/IDataOutput.h>
#endif
#ifndef INCLUDED_openfl_utils__ByteArray_ByteArray_Impl_
#include <openfl/utils/_ByteArray/ByteArray_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_289_fromArrayBuffer,"openfl.utils._ByteArray.ByteArray_Impl_","fromArrayBuffer",0x09275ad1,"openfl.utils._ByteArray.ByteArray_Impl_.fromArrayBuffer","openfl/utils/ByteArray.hx",289,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_311_fromBytes,"openfl.utils._ByteArray.ByteArray_Impl_","fromBytes",0xcad779c3,"openfl.utils._ByteArray.ByteArray_Impl_.fromBytes","openfl/utils/ByteArray.hx",311,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_339_fromBytesData,"openfl.utils._ByteArray.ByteArray_Impl_","fromBytesData",0x72e7998d,"openfl.utils._ByteArray.ByteArray_Impl_.fromBytesData","openfl/utils/ByteArray.hx",339,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_698_toArrayBuffer,"openfl.utils._ByteArray.ByteArray_Impl_","toArrayBuffer",0x56ee15e0,"openfl.utils._ByteArray.ByteArray_Impl_.toArrayBuffer","openfl/utils/ByteArray.hx",698,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_705_toBytePointer,"openfl.utils._ByteArray.ByteArray_Impl_","toBytePointer",0x1626f8fc,"openfl.utils._ByteArray.ByteArray_Impl_.toBytePointer","openfl/utils/ByteArray.hx",705,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_1013_get_length,"openfl.utils._ByteArray.ByteArray_Impl_","get_length",0xd68ebb4d,"openfl.utils._ByteArray.ByteArray_Impl_.get_length","openfl/utils/ByteArray.hx",1013,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_1018_set_length,"openfl.utils._ByteArray.ByteArray_Impl_","set_length",0xda0c59c1,"openfl.utils._ByteArray.ByteArray_Impl_.set_length","openfl/utils/ByteArray.hx",1018,0xaa5cee4a)
HX_LOCAL_STACK_FRAME(_hx_pos_67382ab39e6adff2_103_boot,"openfl.utils._ByteArray.ByteArray_Impl_","boot",0x0e765050,"openfl.utils._ByteArray.ByteArray_Impl_.boot","openfl/utils/ByteArray.hx",103,0xaa5cee4a)
namespace openfl{
namespace utils{
namespace _ByteArray{

void ByteArray_Impl__obj::__construct() { }

Dynamic ByteArray_Impl__obj::__CreateEmpty() { return new ByteArray_Impl__obj; }

void *ByteArray_Impl__obj::_hx_vtable = 0;

Dynamic ByteArray_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ByteArray_Impl__obj > _hx_result = new ByteArray_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ByteArray_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x63baca82;
}

 ::lime::utils::BytePointerData ByteArray_Impl__obj::_hx___bytePointer;

 ::openfl::utils::ByteArrayData ByteArray_Impl__obj::fromArrayBuffer( ::haxe::io::Bytes buffer){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_289_fromArrayBuffer)
HXLINE( 290)		if (::hx::IsNull( buffer )) {
HXLINE( 290)			return null();
            		}
HXLINE( 299)		return ::openfl::utils::ByteArrayData_obj::fromBytes(buffer);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,fromArrayBuffer,return )

 ::openfl::utils::ByteArrayData ByteArray_Impl__obj::fromBytes( ::haxe::io::Bytes bytes){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_311_fromBytes)
HXLINE( 312)		if (::hx::IsNull( bytes )) {
HXLINE( 312)			return null();
            		}
HXLINE( 317)		if (::Std_obj::isOfType(bytes,::hx::ClassOf< ::openfl::utils::ByteArrayData >())) {
HXLINE( 319)			return ( ( ::openfl::utils::ByteArrayData)(bytes) );
            		}
            		else {
HXLINE( 326)			return ::openfl::utils::ByteArrayData_obj::fromBytes(bytes);
            		}
HXLINE( 317)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,fromBytes,return )

 ::openfl::utils::ByteArrayData ByteArray_Impl__obj::fromBytesData(::Array< unsigned char > bytesData){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_339_fromBytesData)
HXLINE( 340)		if (::hx::IsNull( bytesData )) {
HXLINE( 340)			return null();
            		}
HXLINE( 347)		return ::openfl::utils::ByteArrayData_obj::fromBytes(::haxe::io::Bytes_obj::ofData(bytesData));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,fromBytesData,return )

 ::haxe::io::Bytes ByteArray_Impl__obj::toArrayBuffer( ::openfl::utils::ByteArrayData byteArray){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_698_toArrayBuffer)
HXDLIN( 698)		return byteArray;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,toArrayBuffer,return )

 ::lime::utils::BytePointerData ByteArray_Impl__obj::toBytePointer( ::openfl::utils::ByteArrayData byteArray){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_705_toBytePointer)
HXLINE( 707)		::lime::utils::_BytePointer::BytePointer_Impl__obj::set(::openfl::utils::_ByteArray::ByteArray_Impl__obj::_hx___bytePointer,byteArray,null(),null(),byteArray->position);
HXLINE( 709)		return ::openfl::utils::_ByteArray::ByteArray_Impl__obj::_hx___bytePointer;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,toBytePointer,return )

int ByteArray_Impl__obj::get_length( ::openfl::utils::ByteArrayData this1){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_1013_get_length)
HXDLIN(1013)		if (::hx::IsNull( this1 )) {
HXDLIN(1013)			return 0;
            		}
            		else {
HXDLIN(1013)			return this1->length;
            		}
HXDLIN(1013)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(ByteArray_Impl__obj,get_length,return )

int ByteArray_Impl__obj::set_length( ::openfl::utils::ByteArrayData this1,int value){
            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_1018_set_length)
HXLINE(1025)		if ((value > 0)) {
HXLINE(1027)			this1->_hx___resize(value);
HXLINE(1028)			if ((value < this1->position)) {
HXLINE(1028)				this1->position = value;
            			}
            		}
HXLINE(1031)		this1->length = value;
HXLINE(1034)		return value;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(ByteArray_Impl__obj,set_length,return )


ByteArray_Impl__obj::ByteArray_Impl__obj()
{
}

bool ByteArray_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"fromBytes") ) { outValue = fromBytes_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { outValue = get_length_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"set_length") ) { outValue = set_length_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"fromBytesData") ) { outValue = fromBytesData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toArrayBuffer") ) { outValue = toArrayBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"toBytePointer") ) { outValue = toBytePointer_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"fromArrayBuffer") ) { outValue = fromArrayBuffer_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ByteArray_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo ByteArray_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::lime::utils::BytePointerData */ ,(void *) &ByteArray_Impl__obj::_hx___bytePointer,HX_("__bytePointer",75,7b,8d,c5)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void ByteArray_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ByteArray_Impl__obj::_hx___bytePointer,"__bytePointer");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ByteArray_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ByteArray_Impl__obj::_hx___bytePointer,"__bytePointer");
};

#endif

::hx::Class ByteArray_Impl__obj::__mClass;

static ::String ByteArray_Impl__obj_sStaticFields[] = {
	HX_("__bytePointer",75,7b,8d,c5),
	HX_("fromArrayBuffer",2f,ce,77,ec),
	HX_("fromBytes",a1,f2,20,72),
	HX_("fromBytesData",6b,d9,41,db),
	HX_("toArrayBuffer",be,55,48,bf),
	HX_("toBytePointer",da,38,81,7e),
	HX_("get_length",af,04,8f,8f),
	HX_("set_length",23,a3,0c,93),
	::String(null())
};

void ByteArray_Impl__obj::__register()
{
	ByteArray_Impl__obj _hx_dummy;
	ByteArray_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("openfl.utils._ByteArray.ByteArray_Impl_",10,09,69,6e);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ByteArray_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ByteArray_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(ByteArray_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< ByteArray_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ByteArray_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ByteArray_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ByteArray_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ByteArray_Impl__obj::__boot()
{
{
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::lime::utils::BytePointerData _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_67382ab39e6adff2_103_boot)
HXDLIN( 103)			 ::haxe::io::Bytes bytes = null();
HXDLIN( 103)			 ::lime::utils::BytePointerData this1 =  ::lime::utils::BytePointerData_obj::__alloc( HX_CTX ,bytes,0);
HXDLIN( 103)			return this1;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_67382ab39e6adff2_103_boot)
HXDLIN( 103)		_hx___bytePointer = ( ( ::lime::utils::BytePointerData)( ::Dynamic(new _hx_Closure_0())()) );
            	}
}

} // end namespace openfl
} // end namespace utils
} // end namespace _ByteArray
