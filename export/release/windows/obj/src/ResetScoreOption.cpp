// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Highscore
#include <Highscore.h>
#endif
#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_OptionsMenu
#include <OptionsMenu.h>
#endif
#ifndef INCLUDED_ResetScoreOption
#include <ResetScoreOption.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3ef98e6da45dca70_2039_new,"ResetScoreOption","new",0x5d8eefea,"ResetScoreOption.new","Options.hx",2039,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_3ef98e6da45dca70_2053_press,"ResetScoreOption","press",0x4271e98d,"ResetScoreOption.press","Options.hx",2053,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_3ef98e6da45dca70_2080_updateDisplay,"ResetScoreOption","updateDisplay",0x42963f43,"ResetScoreOption.updateDisplay","Options.hx",2080,0x9d9a0240)

void ResetScoreOption_obj::__construct(::String desc){
            	HX_STACKFRAME(&_hx_pos_3ef98e6da45dca70_2039_new)
HXLINE(2041)		this->confirm = false;
HXLINE(2045)		super::__construct();
HXLINE(2046)		if (::OptionsMenu_obj::isInPause) {
HXLINE(2047)			this->description = HX_("This option cannot be toggled in the pause menu.",b4,21,dd,c9);
            		}
            		else {
HXLINE(2049)			this->description = desc;
            		}
            	}

Dynamic ResetScoreOption_obj::__CreateEmpty() { return new ResetScoreOption_obj; }

void *ResetScoreOption_obj::_hx_vtable = 0;

Dynamic ResetScoreOption_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ResetScoreOption_obj > _hx_result = new ResetScoreOption_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ResetScoreOption_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0a3425b8) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0a3425b8;
	} else {
		return inClassId==(int)0x27a70eb9;
	}
}

bool ResetScoreOption_obj::press(){
            	HX_STACKFRAME(&_hx_pos_3ef98e6da45dca70_2053_press)
HXLINE(2054)		if (::OptionsMenu_obj::isInPause) {
HXLINE(2055)			return false;
            		}
HXLINE(2056)		if (!(this->confirm)) {
HXLINE(2058)			this->confirm = true;
HXLINE(2059)			this->display = this->updateDisplay();
HXLINE(2060)			return true;
            		}
HXLINE(2062)		::flixel::FlxG_obj::save->data->__SetField(HX_("songScores",96,1a,f0,a0),null(),::hx::paccDynamic);
HXLINE(2063)		{
HXLINE(2063)			 ::Dynamic key = ::Highscore_obj::songScores->keys();
HXDLIN(2063)			while(( (bool)(key->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(2063)				::String key1 = ( (::String)(key->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE(2065)				::Highscore_obj::songScores->set(key1,0);
            			}
            		}
HXLINE(2067)		::flixel::FlxG_obj::save->data->__SetField(HX_("songCombos",1a,c2,aa,22),null(),::hx::paccDynamic);
HXLINE(2068)		{
HXLINE(2068)			 ::Dynamic key1 = ::Highscore_obj::songCombos->keys();
HXDLIN(2068)			while(( (bool)(key1->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(2068)				::String key = ( (::String)(key1->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE(2070)				::Highscore_obj::songCombos->set(key,HX_("",00,00,00,00));
            			}
            		}
HXLINE(2072)		this->confirm = false;
HXLINE(2074)		this->display = this->updateDisplay();
HXLINE(2075)		return true;
            	}


::String ResetScoreOption_obj::updateDisplay(){
            	HX_STACKFRAME(&_hx_pos_3ef98e6da45dca70_2080_updateDisplay)
HXDLIN(2080)		if (this->confirm) {
HXDLIN(2080)			return HX_("Confirm Score Reset",01,e3,61,66);
            		}
            		else {
HXDLIN(2080)			return HX_("Reset Score",01,16,25,27);
            		}
HXDLIN(2080)		return null();
            	}



::hx::ObjectPtr< ResetScoreOption_obj > ResetScoreOption_obj::__new(::String desc) {
	::hx::ObjectPtr< ResetScoreOption_obj > __this = new ResetScoreOption_obj();
	__this->__construct(desc);
	return __this;
}

::hx::ObjectPtr< ResetScoreOption_obj > ResetScoreOption_obj::__alloc(::hx::Ctx *_hx_ctx,::String desc) {
	ResetScoreOption_obj *__this = (ResetScoreOption_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ResetScoreOption_obj), true, "ResetScoreOption"));
	*(void **)__this = ResetScoreOption_obj::_hx_vtable;
	__this->__construct(desc);
	return __this;
}

ResetScoreOption_obj::ResetScoreOption_obj()
{
}

::hx::Val ResetScoreOption_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"press") ) { return ::hx::Val( press_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"confirm") ) { return ::hx::Val( confirm ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateDisplay") ) { return ::hx::Val( updateDisplay_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ResetScoreOption_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"confirm") ) { confirm=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ResetScoreOption_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("confirm",00,9d,39,10));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ResetScoreOption_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(ResetScoreOption_obj,confirm),HX_("confirm",00,9d,39,10)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ResetScoreOption_obj_sStaticStorageInfo = 0;
#endif

static ::String ResetScoreOption_obj_sMemberFields[] = {
	HX_("confirm",00,9d,39,10),
	HX_("press",83,53,88,c8),
	HX_("updateDisplay",39,8f,b8,86),
	::String(null()) };

::hx::Class ResetScoreOption_obj::__mClass;

void ResetScoreOption_obj::__register()
{
	ResetScoreOption_obj _hx_dummy;
	ResetScoreOption_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ResetScoreOption",f8,72,52,34);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ResetScoreOption_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ResetScoreOption_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ResetScoreOption_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ResetScoreOption_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

