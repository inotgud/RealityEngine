// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Paths
#include <Paths.h>
#endif
#ifndef INCLUDED_StageBackgroundSprite
#include <StageBackgroundSprite.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
#ifndef INCLUDED_flixel_animation_FlxAnimationController
#include <flixel/animation/FlxAnimationController.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxAtlasFrames
#include <flixel/graphics/frames/FlxAtlasFrames.h>
#endif
#ifndef INCLUDED_flixel_graphics_frames_FlxFramesCollection
#include <flixel/graphics/frames/FlxFramesCollection.h>
#endif
#ifndef INCLUDED_flixel_math_FlxPoint
#include <flixel/math/FlxPoint.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxPooled
#include <flixel/util/IFlxPooled.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3cc945ec006c9335_12_new,"StageBackgroundSprite","new",0xf692fac3,"StageBackgroundSprite.new","StageBackgroundSprite.hx",12,0xbe85ce0d)

void StageBackgroundSprite_obj::__construct(::String image,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y, ::Dynamic __o_scrollX, ::Dynamic __o_scrollY,::Array< ::String > animArray, ::Dynamic __o_loop){
            		Float x = __o_x.Default(0);
            		Float y = __o_y.Default(0);
            		 ::Dynamic scrollX = __o_scrollX;
            		if (::hx::IsNull(__o_scrollX)) scrollX = 1;
            		 ::Dynamic scrollY = __o_scrollY;
            		if (::hx::IsNull(__o_scrollY)) scrollY = 1;
            		 ::Dynamic loop = __o_loop;
            		if (::hx::IsNull(__o_loop)) loop = false;
            	HX_STACKFRAME(&_hx_pos_3cc945ec006c9335_12_new)
HXLINE(  13)		super::__construct(x,y,null());
HXLINE(  15)		if (::hx::IsNotNull( animArray )) {
HXLINE(  16)			this->set_frames(::Paths_obj::getSparrowAtlas(image,null(),null()));
HXLINE(  17)			{
HXLINE(  17)				int _g = 0;
HXDLIN(  17)				int _g1 = animArray->length;
HXDLIN(  17)				while((_g < _g1)){
HXLINE(  17)					_g = (_g + 1);
HXDLIN(  17)					int i = (_g - 1);
HXLINE(  18)					::String anim = animArray->__get(i);
HXLINE(  19)					this->animation->addByPrefix(anim,anim,24,loop,null(),null());
HXLINE(  20)					if (::hx::IsNull( this->idleAnim )) {
HXLINE(  21)						this->idleAnim = anim;
HXLINE(  22)						this->animation->play(anim,null(),null(),null());
            					}
            				}
            			}
            		}
            		else {
HXLINE(  26)			if (::hx::IsNotNull( image )) {
HXLINE(  27)				::String library = null();
HXDLIN(  27)				this->loadGraphic(::Paths_obj::getPath(((HX_("images/",77,50,74,c1) + image) + HX_(".png",3b,2d,bd,1e)),HX_("IMAGE",3b,57,57,3b),library),null(),null(),null(),null(),null());
            			}
HXLINE(  29)			this->set_active(false);
            		}
HXLINE(  31)		this->scrollFactor->set(scrollX,scrollY);
HXLINE(  32)		this->set_antialiasing(( (bool)(::flixel::FlxG_obj::save->data->__Field(HX_("antialiasing",f4,16,b3,48),::hx::paccDynamic)) ));
            	}

Dynamic StageBackgroundSprite_obj::__CreateEmpty() { return new StageBackgroundSprite_obj; }

void *StageBackgroundSprite_obj::_hx_vtable = 0;

Dynamic StageBackgroundSprite_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StageBackgroundSprite_obj > _hx_result = new StageBackgroundSprite_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6]);
	return _hx_result;
}

bool StageBackgroundSprite_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x377d4ac9) {
		if (inClassId<=(int)0x2c01639b) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x2c01639b;
		} else {
			return inClassId==(int)0x377d4ac9;
		}
	} else {
		return inClassId==(int)0x7ccf8994 || inClassId==(int)0x7dab0655;
	}
}


::hx::ObjectPtr< StageBackgroundSprite_obj > StageBackgroundSprite_obj::__new(::String image,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y, ::Dynamic __o_scrollX, ::Dynamic __o_scrollY,::Array< ::String > animArray, ::Dynamic __o_loop) {
	::hx::ObjectPtr< StageBackgroundSprite_obj > __this = new StageBackgroundSprite_obj();
	__this->__construct(image,__o_x,__o_y,__o_scrollX,__o_scrollY,animArray,__o_loop);
	return __this;
}

::hx::ObjectPtr< StageBackgroundSprite_obj > StageBackgroundSprite_obj::__alloc(::hx::Ctx *_hx_ctx,::String image,::hx::Null< Float >  __o_x,::hx::Null< Float >  __o_y, ::Dynamic __o_scrollX, ::Dynamic __o_scrollY,::Array< ::String > animArray, ::Dynamic __o_loop) {
	StageBackgroundSprite_obj *__this = (StageBackgroundSprite_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(StageBackgroundSprite_obj), true, "StageBackgroundSprite"));
	*(void **)__this = StageBackgroundSprite_obj::_hx_vtable;
	__this->__construct(image,__o_x,__o_y,__o_scrollX,__o_scrollY,animArray,__o_loop);
	return __this;
}

StageBackgroundSprite_obj::StageBackgroundSprite_obj()
{
}

void StageBackgroundSprite_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(StageBackgroundSprite);
	HX_MARK_MEMBER_NAME(idleAnim,"idleAnim");
	 ::flixel::FlxSprite_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void StageBackgroundSprite_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(idleAnim,"idleAnim");
	 ::flixel::FlxSprite_obj::__Visit(HX_VISIT_ARG);
}

::hx::Val StageBackgroundSprite_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"idleAnim") ) { return ::hx::Val( idleAnim ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val StageBackgroundSprite_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"idleAnim") ) { idleAnim=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void StageBackgroundSprite_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("idleAnim",45,73,61,35));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo StageBackgroundSprite_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(StageBackgroundSprite_obj,idleAnim),HX_("idleAnim",45,73,61,35)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *StageBackgroundSprite_obj_sStaticStorageInfo = 0;
#endif

static ::String StageBackgroundSprite_obj_sMemberFields[] = {
	HX_("idleAnim",45,73,61,35),
	::String(null()) };

::hx::Class StageBackgroundSprite_obj::__mClass;

void StageBackgroundSprite_obj::__register()
{
	StageBackgroundSprite_obj _hx_dummy;
	StageBackgroundSprite_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("StageBackgroundSprite",51,dd,af,22);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(StageBackgroundSprite_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< StageBackgroundSprite_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StageBackgroundSprite_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StageBackgroundSprite_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

