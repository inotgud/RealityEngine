// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_OptionsMenu
#include <OptionsMenu.h>
#endif
#ifndef INCLUDED_ReadmeOn
#include <ReadmeOn.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5685966a085da126_769_new,"ReadmeOn","new",0xf709407f,"ReadmeOn.new","Options.hx",769,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_5685966a085da126_778_left,"ReadmeOn","left",0x2fbcb308,"ReadmeOn.left","Options.hx",778,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_5685966a085da126_787_right,"ReadmeOn","right",0x0c6d01bb,"ReadmeOn.right","Options.hx",787,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_5685966a085da126_797_updateDisplay,"ReadmeOn","updateDisplay",0xbb88fc18,"ReadmeOn.updateDisplay","Options.hx",797,0x9d9a0240)

void ReadmeOn_obj::__construct(::String desc){
            	HX_STACKFRAME(&_hx_pos_5685966a085da126_769_new)
HXLINE( 770)		super::__construct();
HXLINE( 771)		if (::OptionsMenu_obj::isInPause) {
HXLINE( 772)			this->description = HX_("No description",bd,8e,50,26);
            		}
            		else {
HXLINE( 774)			this->description = desc;
            		}
            	}

Dynamic ReadmeOn_obj::__CreateEmpty() { return new ReadmeOn_obj; }

void *ReadmeOn_obj::_hx_vtable = 0;

Dynamic ReadmeOn_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ReadmeOn_obj > _hx_result = new ReadmeOn_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ReadmeOn_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x119c6d31) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x119c6d31;
	} else {
		return inClassId==(int)0x27a70eb9;
	}
}

bool ReadmeOn_obj::left(){
            	HX_STACKFRAME(&_hx_pos_5685966a085da126_778_left)
HXLINE( 779)		if (::OptionsMenu_obj::isInPause) {
HXLINE( 780)			return false;
            		}
HXLINE( 781)		::flixel::FlxG_obj::save->data->__SetField(HX_("readmehm",b3,ee,77,85),HX_("On",3f,45,00,00),::hx::paccDynamic);
HXLINE( 782)		this->display = this->updateDisplay();
HXLINE( 783)		return true;
            	}


bool ReadmeOn_obj::right(){
            	HX_STACKFRAME(&_hx_pos_5685966a085da126_787_right)
HXLINE( 788)		if (::OptionsMenu_obj::isInPause) {
HXLINE( 789)			return false;
            		}
HXLINE( 790)		::flixel::FlxG_obj::save->data->__SetField(HX_("readmehm",b3,ee,77,85),HX_("On",3f,45,00,00),::hx::paccDynamic);
HXLINE( 791)		this->display = this->updateDisplay();
HXLINE( 792)		return true;
            	}


::String ReadmeOn_obj::updateDisplay(){
            	HX_STACKFRAME(&_hx_pos_5685966a085da126_797_updateDisplay)
HXDLIN( 797)		return HX_("Readme On",d1,11,15,e5);
            	}



::hx::ObjectPtr< ReadmeOn_obj > ReadmeOn_obj::__new(::String desc) {
	::hx::ObjectPtr< ReadmeOn_obj > __this = new ReadmeOn_obj();
	__this->__construct(desc);
	return __this;
}

::hx::ObjectPtr< ReadmeOn_obj > ReadmeOn_obj::__alloc(::hx::Ctx *_hx_ctx,::String desc) {
	ReadmeOn_obj *__this = (ReadmeOn_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ReadmeOn_obj), true, "ReadmeOn"));
	*(void **)__this = ReadmeOn_obj::_hx_vtable;
	__this->__construct(desc);
	return __this;
}

ReadmeOn_obj::ReadmeOn_obj()
{
}

::hx::Val ReadmeOn_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"left") ) { return ::hx::Val( left_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"right") ) { return ::hx::Val( right_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateDisplay") ) { return ::hx::Val( updateDisplay_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ReadmeOn_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ReadmeOn_obj_sStaticStorageInfo = 0;
#endif

static ::String ReadmeOn_obj_sMemberFields[] = {
	HX_("left",07,08,b0,47),
	HX_("right",dc,0b,64,e9),
	HX_("updateDisplay",39,8f,b8,86),
	::String(null()) };

::hx::Class ReadmeOn_obj::__mClass;

void ReadmeOn_obj::__register()
{
	ReadmeOn_obj _hx_dummy;
	ReadmeOn_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ReadmeOn",0d,95,29,5f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ReadmeOn_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ReadmeOn_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ReadmeOn_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ReadmeOn_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

