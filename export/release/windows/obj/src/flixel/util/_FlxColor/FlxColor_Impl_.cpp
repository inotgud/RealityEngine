// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_flixel_util__FlxColor_FlxColor_Impl_
#include <flixel/util/_FlxColor/FlxColor_Impl_.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_fda63b7a1987bfd7_183_fromString,"flixel.util._FlxColor.FlxColor_Impl_","fromString",0x7279f720,"flixel.util._FlxColor.FlxColor_Impl_.fromString","flixel/util/FlxColor.hx",183,0x9335c333)
HX_LOCAL_STACK_FRAME(_hx_pos_fda63b7a1987bfd7_561__new,"flixel.util._FlxColor.FlxColor_Impl_","_new",0x4f82ece6,"flixel.util._FlxColor.FlxColor_Impl_._new","flixel/util/FlxColor.hx",561,0x9335c333)
HX_LOCAL_STACK_FRAME(_hx_pos_0c1a490149f50aaa_54_boot,"flixel.util._FlxColor.FlxColor_Impl_","boot",0x517f5bb7,"flixel.util._FlxColor.FlxColor_Impl_.boot","flixel/system/macros/FlxMacroUtil.hx",54,0x8cc0f087)
HX_LOCAL_STACK_FRAME(_hx_pos_fda63b7a1987bfd7_78_boot,"flixel.util._FlxColor.FlxColor_Impl_","boot",0x517f5bb7,"flixel.util._FlxColor.FlxColor_Impl_.boot","flixel/util/FlxColor.hx",78,0x9335c333)
namespace flixel{
namespace util{
namespace _FlxColor{

void FlxColor_Impl__obj::__construct() { }

Dynamic FlxColor_Impl__obj::__CreateEmpty() { return new FlxColor_Impl__obj; }

void *FlxColor_Impl__obj::_hx_vtable = 0;

Dynamic FlxColor_Impl__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxColor_Impl__obj > _hx_result = new FlxColor_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlxColor_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5b84291f;
}

 ::haxe::ds::StringMap FlxColor_Impl__obj::colorLookup;

 ::EReg FlxColor_Impl__obj::COLOR_REGEX;

 ::Dynamic FlxColor_Impl__obj::fromString(::String str){
            	HX_STACKFRAME(&_hx_pos_fda63b7a1987bfd7_183_fromString)
HXLINE( 184)		 ::Dynamic result = null();
HXLINE( 185)		str = ::StringTools_obj::trim(str);
HXLINE( 187)		if (::flixel::util::_FlxColor::FlxColor_Impl__obj::COLOR_REGEX->match(str)) {
HXLINE( 189)			::String hexColor = (HX_("0x",48,2a,00,00) + ::flixel::util::_FlxColor::FlxColor_Impl__obj::COLOR_REGEX->matched(2));
HXLINE( 190)			result = ::flixel::util::_FlxColor::FlxColor_Impl__obj::_new(::Std_obj::parseInt(hexColor));
HXLINE( 191)			if ((hexColor.length == 8)) {
HXLINE( 193)				int Value = ::Math_obj::round(( (Float)(255) ));
HXDLIN( 193)				result = (( (int)(result) ) & 16777215);
HXDLIN( 193)				int result1;
HXDLIN( 193)				if ((Value > 255)) {
HXLINE( 193)					result1 = 255;
            				}
            				else {
HXLINE( 193)					if ((Value < 0)) {
HXLINE( 193)						result1 = 0;
            					}
            					else {
HXLINE( 193)						result1 = Value;
            					}
            				}
HXDLIN( 193)				result = (( (int)(result) ) | (result1 << 24));
            			}
            		}
            		else {
HXLINE( 198)			str = str.toUpperCase();
HXLINE( 199)			{
HXLINE( 199)				 ::Dynamic key = ::flixel::util::_FlxColor::FlxColor_Impl__obj::colorLookup->keys();
HXDLIN( 199)				while(( (bool)(key->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 199)					::String key1 = ( (::String)(key->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE( 201)					if ((key1.toUpperCase() == str)) {
HXLINE( 203)						result = ::flixel::util::_FlxColor::FlxColor_Impl__obj::_new(::flixel::util::_FlxColor::FlxColor_Impl__obj::colorLookup->get(key1));
HXLINE( 204)						goto _hx_goto_0;
            					}
            				}
            				_hx_goto_0:;
            			}
            		}
HXLINE( 209)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxColor_Impl__obj,fromString,return )

int FlxColor_Impl__obj::_new(::hx::Null< int >  __o_Value){
            		int Value = __o_Value.Default(0);
            	HX_STACKFRAME(&_hx_pos_fda63b7a1987bfd7_561__new)
HXDLIN( 561)		int this1 = Value;
HXDLIN( 561)		return this1;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(FlxColor_Impl__obj,_new,return )


FlxColor_Impl__obj::FlxColor_Impl__obj()
{
}

bool FlxColor_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"_new") ) { outValue = _new_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fromString") ) { outValue = fromString_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxColor_Impl__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo FlxColor_Impl__obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(void *) &FlxColor_Impl__obj::colorLookup,HX_("colorLookup",3d,34,de,1b)},
	{::hx::fsObject /*  ::EReg */ ,(void *) &FlxColor_Impl__obj::COLOR_REGEX,HX_("COLOR_REGEX",6b,2b,e2,09)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void FlxColor_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(FlxColor_Impl__obj::colorLookup,"colorLookup");
	HX_MARK_MEMBER_NAME(FlxColor_Impl__obj::COLOR_REGEX,"COLOR_REGEX");
};

#ifdef HXCPP_VISIT_ALLOCS
static void FlxColor_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(FlxColor_Impl__obj::colorLookup,"colorLookup");
	HX_VISIT_MEMBER_NAME(FlxColor_Impl__obj::COLOR_REGEX,"COLOR_REGEX");
};

#endif

::hx::Class FlxColor_Impl__obj::__mClass;

static ::String FlxColor_Impl__obj_sStaticFields[] = {
	HX_("colorLookup",3d,34,de,1b),
	HX_("COLOR_REGEX",6b,2b,e2,09),
	HX_("fromString",db,2d,74,54),
	HX_("_new",61,15,1f,3f),
	::String(null())
};

void FlxColor_Impl__obj::__register()
{
	FlxColor_Impl__obj _hx_dummy;
	FlxColor_Impl__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.util._FlxColor.FlxColor_Impl_",09,b7,a9,ef);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlxColor_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = FlxColor_Impl__obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FlxColor_Impl__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< FlxColor_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = FlxColor_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxColor_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxColor_Impl__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void FlxColor_Impl__obj::__boot()
{
{
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::haxe::ds::StringMap _hx_run(){
            			HX_GC_STACKFRAME(&_hx_pos_0c1a490149f50aaa_54_boot)
HXDLIN(  54)			 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(  54)			_g->set(HX_("TRANSPARENT",32,37,f6,f8),0);
HXDLIN(  54)			_g->set(HX_("WHITE",89,82,ab,47),-1);
HXDLIN(  54)			_g->set(HX_("GRAY",e3,97,2c,2f),-8355712);
HXDLIN(  54)			_g->set(HX_("BLACK",9f,0d,e0,32),-16777216);
HXDLIN(  54)			_g->set(HX_("GREEN",a3,46,db,17),-16744448);
HXDLIN(  54)			_g->set(HX_("LIME",15,df,73,32),-16711936);
HXDLIN(  54)			_g->set(HX_("YELLOW",74,4b,df,82),-256);
HXDLIN(  54)			_g->set(HX_("ORANGE",ee,5e,3f,f8),-23296);
HXDLIN(  54)			_g->set(HX_("RED",31,75,3e,00),-65536);
HXDLIN(  54)			_g->set(HX_("PURPLE",3c,a2,0c,24),-8388480);
HXDLIN(  54)			_g->set(HX_("BLUE",9a,0a,da,2b),-16776961);
HXDLIN(  54)			_g->set(HX_("BROWN",56,06,e2,36),-7650029);
HXDLIN(  54)			_g->set(HX_("PINK",76,ba,18,35),-16181);
HXDLIN(  54)			_g->set(HX_("MAGENTA",09,8e,71,8e),-65281);
HXDLIN(  54)			_g->set(HX_("CYAN",23,0d,8d,2c),-16711681);
HXDLIN(  54)			return _g;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_0c1a490149f50aaa_54_boot)
HXDLIN(  54)		colorLookup = ( ( ::haxe::ds::StringMap)( ::Dynamic(new _hx_Closure_0())()) );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_fda63b7a1987bfd7_78_boot)
HXDLIN(  78)		COLOR_REGEX =  ::EReg_obj::__alloc( HX_CTX ,HX_("^(0x|#)(([A-F0-9]{2}){3,4})$",25,93,28,2c),HX_("i",69,00,00,00));
            	}
}

} // end namespace flixel
} // end namespace util
} // end namespace _FlxColor
