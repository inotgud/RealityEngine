// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxObject
#include <flixel/FlxObject.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSort
#include <flixel/util/FlxSort.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_408840f213d59887_18_byY,"flixel.util.FlxSort","byY",0x7c03b7ea,"flixel.util.FlxSort.byY","flixel/util/FlxSort.hx",18,0x198bbf28)
namespace flixel{
namespace util{

void FlxSort_obj::__construct() { }

Dynamic FlxSort_obj::__CreateEmpty() { return new FlxSort_obj; }

void *FlxSort_obj::_hx_vtable = 0;

Dynamic FlxSort_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< FlxSort_obj > _hx_result = new FlxSort_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool FlxSort_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0529cd72;
}

int FlxSort_obj::byY(int Order, ::flixel::FlxObject Obj1, ::flixel::FlxObject Obj2){
            	HX_STACKFRAME(&_hx_pos_408840f213d59887_18_byY)
HXDLIN(  18)		Float Value1 = Obj1->y;
HXDLIN(  18)		Float Value2 = Obj2->y;
HXDLIN(  18)		int result = 0;
HXDLIN(  18)		if ((Value1 < Value2)) {
HXDLIN(  18)			result = Order;
            		}
            		else {
HXDLIN(  18)			if ((Value1 > Value2)) {
HXDLIN(  18)				result = -(Order);
            			}
            		}
HXDLIN(  18)		return result;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(FlxSort_obj,byY,return )


FlxSort_obj::FlxSort_obj()
{
}

bool FlxSort_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"byY") ) { outValue = byY_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *FlxSort_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *FlxSort_obj_sStaticStorageInfo = 0;
#endif

::hx::Class FlxSort_obj::__mClass;

static ::String FlxSort_obj_sStaticFields[] = {
	HX_("byY",a2,c6,4a,00),
	::String(null())
};

void FlxSort_obj::__register()
{
	FlxSort_obj _hx_dummy;
	FlxSort_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.util.FlxSort",b6,0d,59,bc);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &FlxSort_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(FlxSort_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< FlxSort_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = FlxSort_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = FlxSort_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace util
