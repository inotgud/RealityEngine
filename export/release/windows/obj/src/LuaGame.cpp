// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_cc9afe4755847ade
#define INCLUDED_cc9afe4755847ade
#include "linc_lua.h"
#endif
#ifndef INCLUDED_LuaClass
#include <LuaClass.h>
#endif
#ifndef INCLUDED_LuaGame
#include <LuaGame.h>
#endif
#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
#ifndef INCLUDED_PlayState
#include <PlayState.h>
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Stage
#include <Stage.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_addons_transition_FlxTransitionableState
#include <flixel/addons/transition/FlxTransitionableState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_FlxUIState
#include <flixel/addons/ui/FlxUIState.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IEventGetter
#include <flixel/addons/ui/interfaces/IEventGetter.h>
#endif
#ifndef INCLUDED_flixel_addons_ui_interfaces_IFlxUIState
#include <flixel/addons/ui/interfaces/IFlxUIState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_834c19109e22570a_1877_new,"LuaGame","new",0x8b439b9c,"LuaGame.new","LuaClass.hx",1877,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_834c19109e22570a_1882_new,"LuaGame","new",0x8b439b9c,"LuaGame.new","LuaClass.hx",1882,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_834c19109e22570a_1891_new,"LuaGame","new",0x8b439b9c,"LuaGame.new","LuaClass.hx",1891,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_834c19109e22570a_1900_new,"LuaGame","new",0x8b439b9c,"LuaGame.new","LuaClass.hx",1900,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_834c19109e22570a_1905_new,"LuaGame","new",0x8b439b9c,"LuaGame.new","LuaClass.hx",1905,0xe0a4e33e)
HX_DEFINE_STACK_FRAME(_hx_pos_834c19109e22570a_1868_new,"LuaGame","new",0x8b439b9c,"LuaGame.new","LuaClass.hx",1868,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_834c19109e22570a_1937_SetNumProperty,"LuaGame","SetNumProperty",0x2c9e2e9d,"LuaGame.SetNumProperty","LuaClass.hx",1937,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_834c19109e22570a_1952_Register,"LuaGame","Register",0x8cab5dc7,"LuaGame.Register","LuaClass.hx",1952,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_834c19109e22570a_1914_changeStage,"LuaGame","changeStage",0x1a987a6a,"LuaGame.changeStage","LuaClass.hx",1914,0xe0a4e33e)
HX_LOCAL_STACK_FRAME(_hx_pos_834c19109e22570a_1934_boot,"LuaGame","boot",0x47fd8d76,"LuaGame.boot","LuaClass.hx",1934,0xe0a4e33e)

void LuaGame_obj::__construct(){
            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_834c19109e22570a_1877_new)
HXLINE(1878)			lua_pushnumber(l,::PlayState_obj::instance->health);
HXLINE(1879)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_1) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_834c19109e22570a_1882_new)
HXLINE(1883)			::PlayState_obj::instance->health = lua_tonumber(l,3);
HXLINE(1884)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_2) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_834c19109e22570a_1891_new)
HXLINE(1892)			lua_pushnumber(l,::PlayState_obj::instance->accuracy);
HXLINE(1893)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_3) HXARGC(2)
            		int _hx_run( cpp::Reference<lua_State> l, ::Dynamic data){
            			HX_GC_STACKFRAME(&_hx_pos_834c19109e22570a_1900_new)
HXLINE(1901)			linc::lua::pushcfunction(l,::LuaGame_obj::changeStageC);
HXLINE(1902)			return 1;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_4) HXARGC(1)
            		int _hx_run( cpp::Reference<lua_State> l){
            			HX_GC_STACKFRAME(&_hx_pos_834c19109e22570a_1905_new)
HXLINE(1906)			linc::lual::error(l,HX_("changeStage is read-only.",cf,79,85,d3));
HXLINE(1907)			return 0;
            		}
            		HX_END_LOCAL_FUNC1(return)

            	HX_GC_STACKFRAME(&_hx_pos_834c19109e22570a_1868_new)
HXLINE(1869)		super::__construct();
HXLINE(1870)		this->className = HX_("Game",12,20,38,2f);
HXLINE(1872)		 ::haxe::ds::StringMap _g =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXDLIN(1872)		_g->set(HX_("health",9c,28,06,fd), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_0()))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),::PlayState_obj::instance->health)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_1()))));
HXDLIN(1872)		_g->set(HX_("accuracy",39,06,c5,ff), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_2()))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),::PlayState_obj::instance->accuracy)
            			->setFixed(2,HX_("setter",7f,33,88,6f),this->SetNumProperty_dyn())));
HXDLIN(1872)		_g->set(HX_("changeStage",2e,13,d1,a9), ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("getter",0b,df,3f,a3), ::Dynamic(new _hx_Closure_3()))
            			->setFixed(1,HX_("defaultValue",f0,ba,13,e7),0)
            			->setFixed(2,HX_("setter",7f,33,88,6f), ::Dynamic(new _hx_Closure_4()))));
HXDLIN(1872)		this->properties = _g;
            	}

Dynamic LuaGame_obj::__CreateEmpty() { return new LuaGame_obj; }

void *LuaGame_obj::_hx_vtable = 0;

Dynamic LuaGame_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< LuaGame_obj > _hx_result = new LuaGame_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool LuaGame_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x066d5606) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x066d5606;
	} else {
		return inClassId==(int)0x52dfe7a4;
	}
}

int LuaGame_obj::SetNumProperty( cpp::Reference<lua_State> l){
            	HX_STACKFRAME(&_hx_pos_834c19109e22570a_1937_SetNumProperty)
HXLINE(1942)		if ((lua_type(l,3) != 3)) {
HXLINE(1944)			linc::lual::error(l,((HX_("invalid argument #3 (number expected, got ",25,84,c0,d9) + linc::lua::_typename(l,lua_type(l,3))) + HX_(")",29,00,00,00)));
HXLINE(1945)			return 0;
            		}
HXLINE(1947)		 ::lime::ui::Window _hx_tmp = ::lime::app::Application_obj::current->_hx___window;
HXDLIN(1947)		::String _hx_tmp1 = linc::lua::tostring(l,2);
HXDLIN(1947)		::Reflect_obj::setProperty(_hx_tmp,_hx_tmp1,lua_tonumber(l,3));
HXLINE(1948)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(LuaGame_obj,SetNumProperty,return )

void LuaGame_obj::Register( cpp::Reference<lua_State> l){
            	HX_STACKFRAME(&_hx_pos_834c19109e22570a_1952_Register)
HXLINE(1953)		::LuaGame_obj::state = l;
HXLINE(1954)		this->super::Register(l);
            	}


 cpp::Reference<lua_State> LuaGame_obj::state;

int LuaGame_obj::changeStage( lua_State* l){
            	HX_GC_STACKFRAME(&_hx_pos_834c19109e22570a_1914_changeStage)
HXLINE(1917)		::String stageName = linc::lual::checkstring(::LuaGame_obj::state,2);
HXLINE(1919)		{
HXLINE(1919)			int _g = 0;
HXDLIN(1919)			::cpp::VirtualArray _g1 = ::PlayState_obj::Stage->toAdd;
HXDLIN(1919)			while((_g < _g1->get_length())){
HXLINE(1919)				 ::Dynamic i = _g1->__get(_g);
HXDLIN(1919)				_g = (_g + 1);
HXLINE(1921)				::PlayState_obj::instance->remove(i,null()).StaticCast<  ::flixel::FlxBasic >();
            			}
            		}
HXLINE(1924)		::PlayState_obj::Stage =  ::Stage_obj::__alloc( HX_CTX ,stageName);
HXLINE(1926)		{
HXLINE(1926)			int _g2 = 0;
HXDLIN(1926)			::cpp::VirtualArray _g3 = ::PlayState_obj::Stage->toAdd;
HXDLIN(1926)			while((_g2 < _g3->get_length())){
HXLINE(1926)				 ::Dynamic i = _g3->__get(_g2);
HXDLIN(1926)				_g2 = (_g2 + 1);
HXLINE(1928)				::PlayState_obj::instance->add(i).StaticCast<  ::flixel::FlxBasic >();
            			}
            		}
HXLINE(1931)		return 0;
            	}


::cpp::Function< int  ( lua_State*) > LuaGame_obj::changeStageC;


::hx::ObjectPtr< LuaGame_obj > LuaGame_obj::__new() {
	::hx::ObjectPtr< LuaGame_obj > __this = new LuaGame_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< LuaGame_obj > LuaGame_obj::__alloc(::hx::Ctx *_hx_ctx) {
	LuaGame_obj *__this = (LuaGame_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(LuaGame_obj), true, "LuaGame"));
	*(void **)__this = LuaGame_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

LuaGame_obj::LuaGame_obj()
{
}

::hx::Val LuaGame_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"Register") ) { return ::hx::Val( Register_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"SetNumProperty") ) { return ::hx::Val( SetNumProperty_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool LuaGame_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { outValue = ( state ); return true; }
	}
	return false;
}

bool LuaGame_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { state=ioValue.Cast<  cpp::Reference<lua_State> >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *LuaGame_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo LuaGame_obj_sStaticStorageInfo[] = {
	{::hx::fsUnknown /*  cpp::Reference<lua_State> */ ,(void *) &LuaGame_obj::state,HX_("state",11,76,0b,84)},
	{::hx::fsObject /* ::cpp::Function< int  ( lua_State*) > */ ,(void *) &LuaGame_obj::changeStageC,HX_("changeStageC",55,b5,1f,ed)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static ::String LuaGame_obj_sMemberFields[] = {
	HX_("SetNumProperty",59,68,62,ea),
	HX_("Register",83,62,51,aa),
	::String(null()) };

static void LuaGame_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(LuaGame_obj::state,"state");
	HX_MARK_MEMBER_NAME(LuaGame_obj::changeStageC,"changeStageC");
};

#ifdef HXCPP_VISIT_ALLOCS
static void LuaGame_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(LuaGame_obj::state,"state");
	HX_VISIT_MEMBER_NAME(LuaGame_obj::changeStageC,"changeStageC");
};

#endif

::hx::Class LuaGame_obj::__mClass;

static ::String LuaGame_obj_sStaticFields[] = {
	HX_("state",11,76,0b,84),
	::String(null())
};

void LuaGame_obj::__register()
{
	LuaGame_obj _hx_dummy;
	LuaGame_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("LuaGame",aa,dd,36,29);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &LuaGame_obj::__GetStatic;
	__mClass->mSetStaticField = &LuaGame_obj::__SetStatic;
	__mClass->mMarkFunc = LuaGame_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(LuaGame_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(LuaGame_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< LuaGame_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = LuaGame_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = LuaGame_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = LuaGame_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void LuaGame_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_834c19109e22570a_1934_boot)
HXDLIN(1934)		changeStageC = ::cpp::Function< int ( lua_State*)>(::hx::AnyCast(&::LuaGame_obj::changeStage ));
            	}
}

