// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_OptionsMenu
#include <OptionsMenu.h>
#endif
#ifndef INCLUDED_ReadmeOff
#include <ReadmeOff.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2d86497a412e3b7e_734_new,"ReadmeOff","new",0x125de533,"ReadmeOff.new","Options.hx",734,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_2d86497a412e3b7e_743_left,"ReadmeOff","left",0xfe782bd4,"ReadmeOff.left","Options.hx",743,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_2d86497a412e3b7e_752_right,"ReadmeOff","right",0x21bb3b6f,"ReadmeOff.right","Options.hx",752,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_2d86497a412e3b7e_762_updateDisplay,"ReadmeOff","updateDisplay",0xe0f609cc,"ReadmeOff.updateDisplay","Options.hx",762,0x9d9a0240)

void ReadmeOff_obj::__construct(::String desc){
            	HX_STACKFRAME(&_hx_pos_2d86497a412e3b7e_734_new)
HXLINE( 735)		super::__construct();
HXLINE( 736)		if (::OptionsMenu_obj::isInPause) {
HXLINE( 737)			this->description = HX_("No description",bd,8e,50,26);
            		}
            		else {
HXLINE( 739)			this->description = desc;
            		}
            	}

Dynamic ReadmeOff_obj::__CreateEmpty() { return new ReadmeOff_obj; }

void *ReadmeOff_obj::_hx_vtable = 0;

Dynamic ReadmeOff_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ReadmeOff_obj > _hx_result = new ReadmeOff_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ReadmeOff_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x27a70eb9) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x27a70eb9;
	} else {
		return inClassId==(int)0x5743171d;
	}
}

bool ReadmeOff_obj::left(){
            	HX_STACKFRAME(&_hx_pos_2d86497a412e3b7e_743_left)
HXLINE( 744)		if (::OptionsMenu_obj::isInPause) {
HXLINE( 745)			return false;
            		}
HXLINE( 746)		::flixel::FlxG_obj::save->data->__SetField(HX_("readmehm",b3,ee,77,85),HX_("Off",4f,4b,3c,00),::hx::paccDynamic);
HXLINE( 747)		this->display = this->updateDisplay();
HXLINE( 748)		return true;
            	}


bool ReadmeOff_obj::right(){
            	HX_STACKFRAME(&_hx_pos_2d86497a412e3b7e_752_right)
HXLINE( 753)		if (::OptionsMenu_obj::isInPause) {
HXLINE( 754)			return false;
            		}
HXLINE( 755)		::flixel::FlxG_obj::save->data->__SetField(HX_("readmehm",b3,ee,77,85),HX_("Off",4f,4b,3c,00),::hx::paccDynamic);
HXLINE( 756)		this->display = this->updateDisplay();
HXLINE( 757)		return true;
            	}


::String ReadmeOff_obj::updateDisplay(){
            	HX_STACKFRAME(&_hx_pos_2d86497a412e3b7e_762_updateDisplay)
HXDLIN( 762)		return HX_("Readme Off",7d,7e,5a,8d);
            	}



::hx::ObjectPtr< ReadmeOff_obj > ReadmeOff_obj::__new(::String desc) {
	::hx::ObjectPtr< ReadmeOff_obj > __this = new ReadmeOff_obj();
	__this->__construct(desc);
	return __this;
}

::hx::ObjectPtr< ReadmeOff_obj > ReadmeOff_obj::__alloc(::hx::Ctx *_hx_ctx,::String desc) {
	ReadmeOff_obj *__this = (ReadmeOff_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ReadmeOff_obj), true, "ReadmeOff"));
	*(void **)__this = ReadmeOff_obj::_hx_vtable;
	__this->__construct(desc);
	return __this;
}

ReadmeOff_obj::ReadmeOff_obj()
{
}

::hx::Val ReadmeOff_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"left") ) { return ::hx::Val( left_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"right") ) { return ::hx::Val( right_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateDisplay") ) { return ::hx::Val( updateDisplay_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *ReadmeOff_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *ReadmeOff_obj_sStaticStorageInfo = 0;
#endif

static ::String ReadmeOff_obj_sMemberFields[] = {
	HX_("left",07,08,b0,47),
	HX_("right",dc,0b,64,e9),
	HX_("updateDisplay",39,8f,b8,86),
	::String(null()) };

::hx::Class ReadmeOff_obj::__mClass;

void ReadmeOff_obj::__register()
{
	ReadmeOff_obj _hx_dummy;
	ReadmeOff_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ReadmeOff",c1,cf,38,e5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ReadmeOff_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ReadmeOff_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ReadmeOff_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ReadmeOff_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

