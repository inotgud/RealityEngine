// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_OptionsMenu
#include <OptionsMenu.h>
#endif
#ifndef INCLUDED_RealityEngineData
#include <RealityEngineData.h>
#endif
#ifndef INCLUDED_ResetSettings
#include <ResetSettings.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a29365f4e6970aaf_2084_new,"ResetSettings","new",0x972c1ba4,"ResetSettings.new","Options.hx",2084,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_a29365f4e6970aaf_2098_press,"ResetSettings","press",0xfe7cf7c7,"ResetSettings.press","Options.hx",2098,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_a29365f4e6970aaf_2155_updateDisplay,"ResetSettings","updateDisplay",0x8011177d,"ResetSettings.updateDisplay","Options.hx",2155,0x9d9a0240)

void ResetSettings_obj::__construct(::String desc){
            	HX_STACKFRAME(&_hx_pos_a29365f4e6970aaf_2084_new)
HXLINE(2086)		this->confirm = false;
HXLINE(2090)		super::__construct();
HXLINE(2091)		if (::OptionsMenu_obj::isInPause) {
HXLINE(2092)			this->description = HX_("This option cannot be toggled in the pause menu.",b4,21,dd,c9);
            		}
            		else {
HXLINE(2094)			this->description = desc;
            		}
            	}

Dynamic ResetSettings_obj::__CreateEmpty() { return new ResetSettings_obj; }

void *ResetSettings_obj::_hx_vtable = 0;

Dynamic ResetSettings_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< ResetSettings_obj > _hx_result = new ResetSettings_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ResetSettings_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x27a70eb9) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x27a70eb9;
	} else {
		return inClassId==(int)0x7db3ef2a;
	}
}

bool ResetSettings_obj::press(){
            	HX_STACKFRAME(&_hx_pos_a29365f4e6970aaf_2098_press)
HXLINE(2099)		if (::OptionsMenu_obj::isInPause) {
HXLINE(2100)			return false;
            		}
HXLINE(2101)		if (!(this->confirm)) {
HXLINE(2103)			this->confirm = true;
HXLINE(2104)			this->display = this->updateDisplay();
HXLINE(2105)			return true;
            		}
HXLINE(2107)		::flixel::FlxG_obj::save->data->__SetField(HX_("weekUnlocked",37,64,c4,a5),null(),::hx::paccDynamic);
HXLINE(2108)		::flixel::FlxG_obj::save->data->__SetField(HX_("newInput",8a,07,68,e1),null(),::hx::paccDynamic);
HXLINE(2109)		::flixel::FlxG_obj::save->data->__SetField(HX_("downscroll",ef,45,d4,4f),null(),::hx::paccDynamic);
HXLINE(2110)		::flixel::FlxG_obj::save->data->__SetField(HX_("antialiasing",f4,16,b3,48),null(),::hx::paccDynamic);
HXLINE(2111)		::flixel::FlxG_obj::save->data->__SetField(HX_("missSounds",e0,d4,49,2b),null(),::hx::paccDynamic);
HXLINE(2112)		::flixel::FlxG_obj::save->data->__SetField(HX_("dfjk",c3,18,67,42),null(),::hx::paccDynamic);
HXLINE(2113)		::flixel::FlxG_obj::save->data->__SetField(HX_("accuracyDisplay",09,75,5e,26),null(),::hx::paccDynamic);
HXLINE(2114)		::flixel::FlxG_obj::save->data->__SetField(HX_("offset",93,97,3f,60),null(),::hx::paccDynamic);
HXLINE(2115)		::flixel::FlxG_obj::save->data->__SetField(HX_("songPosition",9e,dd,3b,8d),null(),::hx::paccDynamic);
HXLINE(2116)		::flixel::FlxG_obj::save->data->__SetField(HX_("fps",e9,c7,4d,00),null(),::hx::paccDynamic);
HXLINE(2117)		::flixel::FlxG_obj::save->data->__SetField(HX_("changedHit",bf,5d,c0,31),null(),::hx::paccDynamic);
HXLINE(2118)		::flixel::FlxG_obj::save->data->__SetField(HX_("fpsRain",dd,e5,17,c7),null(),::hx::paccDynamic);
HXLINE(2119)		::flixel::FlxG_obj::save->data->__SetField(HX_("fpsCap",a9,7b,7e,91),null(),::hx::paccDynamic);
HXLINE(2120)		::flixel::FlxG_obj::save->data->__SetField(HX_("scrollSpeed",3a,e0,46,cb),null(),::hx::paccDynamic);
HXLINE(2121)		::flixel::FlxG_obj::save->data->__SetField(HX_("npsDisplay",51,08,e2,23),null(),::hx::paccDynamic);
HXLINE(2122)		::flixel::FlxG_obj::save->data->__SetField(HX_("frames",a6,af,85,ac),null(),::hx::paccDynamic);
HXLINE(2123)		::flixel::FlxG_obj::save->data->__SetField(HX_("accuracyMod",09,b2,8a,86),null(),::hx::paccDynamic);
HXLINE(2124)		::flixel::FlxG_obj::save->data->__SetField(HX_("watermark",a4,af,1e,e0),null(),::hx::paccDynamic);
HXLINE(2125)		::flixel::FlxG_obj::save->data->__SetField(HX_("ghost",4f,8f,58,93),null(),::hx::paccDynamic);
HXLINE(2126)		::flixel::FlxG_obj::save->data->__SetField(HX_("distractions",31,13,7d,60),null(),::hx::paccDynamic);
HXLINE(2127)		::flixel::FlxG_obj::save->data->__SetField(HX_("colour",4c,c8,86,c6),null(),::hx::paccDynamic);
HXLINE(2128)		::flixel::FlxG_obj::save->data->__SetField(HX_("stepMania",06,56,8a,73),null(),::hx::paccDynamic);
HXLINE(2129)		::flixel::FlxG_obj::save->data->__SetField(HX_("flashing",32,85,e8,99),null(),::hx::paccDynamic);
HXLINE(2130)		::flixel::FlxG_obj::save->data->__SetField(HX_("resetButton",21,e5,f4,79),null(),::hx::paccDynamic);
HXLINE(2131)		::flixel::FlxG_obj::save->data->__SetField(HX_("botplay",7b,fb,a9,61),null(),::hx::paccDynamic);
HXLINE(2132)		::flixel::FlxG_obj::save->data->__SetField(HX_("muteBind",36,71,98,10),HX_("0",30,00,00,00),::hx::paccDynamic);
HXLINE(2133)		::flixel::FlxG_obj::save->data->__SetField(HX_("volUpBind",2b,c1,5a,38),HX_("+",2b,00,00,00),::hx::paccDynamic);
HXLINE(2134)		::flixel::FlxG_obj::save->data->__SetField(HX_("volDownBind",72,65,58,14),HX_("-",2d,00,00,00),::hx::paccDynamic);
HXLINE(2135)		::flixel::FlxG_obj::save->data->__SetField(HX_("cpuStrums",52,86,8a,e0),null(),::hx::paccDynamic);
HXLINE(2136)		::flixel::FlxG_obj::save->data->__SetField(HX_("strumline",bd,4d,fe,03),null(),::hx::paccDynamic);
HXLINE(2137)		::flixel::FlxG_obj::save->data->__SetField(HX_("customStrumLine",ec,d3,8b,07),null(),::hx::paccDynamic);
HXLINE(2138)		::flixel::FlxG_obj::save->data->__SetField(HX_("camzoom",a2,ca,10,f1),null(),::hx::paccDynamic);
HXLINE(2139)		::flixel::FlxG_obj::save->data->__SetField(HX_("scoreScreen",5e,6c,c3,13),null(),::hx::paccDynamic);
HXLINE(2140)		::flixel::FlxG_obj::save->data->__SetField(HX_("inputShow",27,92,7d,13),null(),::hx::paccDynamic);
HXLINE(2141)		::flixel::FlxG_obj::save->data->__SetField(HX_("optimize",dd,8c,18,1d),null(),::hx::paccDynamic);
HXLINE(2142)		::flixel::FlxG_obj::save->data->__SetField(HX_("cacheImages",9a,7c,33,1d),null(),::hx::paccDynamic);
HXLINE(2143)		::flixel::FlxG_obj::save->data->__SetField(HX_("editor",ad,41,dd,3b),null(),::hx::paccDynamic);
HXLINE(2144)		::flixel::FlxG_obj::save->data->__SetField(HX_("laneTransparency",24,32,52,af),0,::hx::paccDynamic);
HXLINE(2146)		::RealityEngineData_obj::initSave();
HXLINE(2147)		this->confirm = false;
HXLINE(2149)		this->display = this->updateDisplay();
HXLINE(2150)		return true;
            	}


::String ResetSettings_obj::updateDisplay(){
            	HX_STACKFRAME(&_hx_pos_a29365f4e6970aaf_2155_updateDisplay)
HXDLIN(2155)		if (this->confirm) {
HXDLIN(2155)			return HX_("Confirm Settings Reset",12,52,8b,02);
            		}
            		else {
HXDLIN(2155)			return HX_("Reset Settings",94,71,0f,26);
            		}
HXDLIN(2155)		return null();
            	}



::hx::ObjectPtr< ResetSettings_obj > ResetSettings_obj::__new(::String desc) {
	::hx::ObjectPtr< ResetSettings_obj > __this = new ResetSettings_obj();
	__this->__construct(desc);
	return __this;
}

::hx::ObjectPtr< ResetSettings_obj > ResetSettings_obj::__alloc(::hx::Ctx *_hx_ctx,::String desc) {
	ResetSettings_obj *__this = (ResetSettings_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ResetSettings_obj), true, "ResetSettings"));
	*(void **)__this = ResetSettings_obj::_hx_vtable;
	__this->__construct(desc);
	return __this;
}

ResetSettings_obj::ResetSettings_obj()
{
}

::hx::Val ResetSettings_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"press") ) { return ::hx::Val( press_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"confirm") ) { return ::hx::Val( confirm ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateDisplay") ) { return ::hx::Val( updateDisplay_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val ResetSettings_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"confirm") ) { confirm=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ResetSettings_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("confirm",00,9d,39,10));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo ResetSettings_obj_sMemberStorageInfo[] = {
	{::hx::fsBool,(int)offsetof(ResetSettings_obj,confirm),HX_("confirm",00,9d,39,10)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *ResetSettings_obj_sStaticStorageInfo = 0;
#endif

static ::String ResetSettings_obj_sMemberFields[] = {
	HX_("confirm",00,9d,39,10),
	HX_("press",83,53,88,c8),
	HX_("updateDisplay",39,8f,b8,86),
	::String(null()) };

::hx::Class ResetSettings_obj::__mClass;

void ResetSettings_obj::__register()
{
	ResetSettings_obj _hx_dummy;
	ResetSettings_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("ResetSettings",b2,b9,cc,03);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(ResetSettings_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< ResetSettings_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ResetSettings_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ResetSettings_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

