// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_CursedOff
#include <CursedOff.h>
#endif
#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_OptionsMenu
#include <OptionsMenu.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5af879ec0aa1f54d_840_new,"CursedOff","new",0x1a71cfcf,"CursedOff.new","Options.hx",840,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_5af879ec0aa1f54d_849_left,"CursedOff","left",0x07d189b8,"CursedOff.left","Options.hx",849,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_5af879ec0aa1f54d_858_right,"CursedOff","right",0x4694050b,"CursedOff.right","Options.hx",858,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_5af879ec0aa1f54d_868_updateDisplay,"CursedOff","updateDisplay",0xb45bcf68,"CursedOff.updateDisplay","Options.hx",868,0x9d9a0240)

void CursedOff_obj::__construct(::String desc){
            	HX_STACKFRAME(&_hx_pos_5af879ec0aa1f54d_840_new)
HXLINE( 841)		super::__construct();
HXLINE( 842)		if (::OptionsMenu_obj::isInPause) {
HXLINE( 843)			this->description = HX_("No description",bd,8e,50,26);
            		}
            		else {
HXLINE( 845)			this->description = desc;
            		}
            	}

Dynamic CursedOff_obj::__CreateEmpty() { return new CursedOff_obj; }

void *CursedOff_obj::_hx_vtable = 0;

Dynamic CursedOff_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< CursedOff_obj > _hx_result = new CursedOff_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool CursedOff_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x05e7b19d) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x05e7b19d;
	} else {
		return inClassId==(int)0x27a70eb9;
	}
}

bool CursedOff_obj::left(){
            	HX_STACKFRAME(&_hx_pos_5af879ec0aa1f54d_849_left)
HXLINE( 850)		if (::OptionsMenu_obj::isInPause) {
HXLINE( 851)			return false;
            		}
HXLINE( 852)		::flixel::FlxG_obj::save->data->__SetField(HX_("cursedmode",75,ca,3a,2a),HX_("Off",4f,4b,3c,00),::hx::paccDynamic);
HXLINE( 853)		this->display = this->updateDisplay();
HXLINE( 854)		return true;
            	}


bool CursedOff_obj::right(){
            	HX_STACKFRAME(&_hx_pos_5af879ec0aa1f54d_858_right)
HXLINE( 859)		if (::OptionsMenu_obj::isInPause) {
HXLINE( 860)			return false;
            		}
HXLINE( 861)		::flixel::FlxG_obj::save->data->__SetField(HX_("cursedmode",75,ca,3a,2a),HX_("Off",4f,4b,3c,00),::hx::paccDynamic);
HXLINE( 862)		this->display = this->updateDisplay();
HXLINE( 863)		return true;
            	}


::String CursedOff_obj::updateDisplay(){
            	HX_STACKFRAME(&_hx_pos_5af879ec0aa1f54d_868_updateDisplay)
HXDLIN( 868)		return HX_("Cursed Mode Off",e0,eb,52,57);
            	}



::hx::ObjectPtr< CursedOff_obj > CursedOff_obj::__new(::String desc) {
	::hx::ObjectPtr< CursedOff_obj > __this = new CursedOff_obj();
	__this->__construct(desc);
	return __this;
}

::hx::ObjectPtr< CursedOff_obj > CursedOff_obj::__alloc(::hx::Ctx *_hx_ctx,::String desc) {
	CursedOff_obj *__this = (CursedOff_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(CursedOff_obj), true, "CursedOff"));
	*(void **)__this = CursedOff_obj::_hx_vtable;
	__this->__construct(desc);
	return __this;
}

CursedOff_obj::CursedOff_obj()
{
}

::hx::Val CursedOff_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"left") ) { return ::hx::Val( left_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"right") ) { return ::hx::Val( right_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"updateDisplay") ) { return ::hx::Val( updateDisplay_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *CursedOff_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *CursedOff_obj_sStaticStorageInfo = 0;
#endif

static ::String CursedOff_obj_sMemberFields[] = {
	HX_("left",07,08,b0,47),
	HX_("right",dc,0b,64,e9),
	HX_("updateDisplay",39,8f,b8,86),
	::String(null()) };

::hx::Class CursedOff_obj::__mClass;

void CursedOff_obj::__register()
{
	CursedOff_obj _hx_dummy;
	CursedOff_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("CursedOff",5d,3c,a4,42);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(CursedOff_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< CursedOff_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CursedOff_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CursedOff_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

