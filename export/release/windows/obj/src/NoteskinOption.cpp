// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_NoteskinHelpers
#include <NoteskinHelpers.h>
#endif
#ifndef INCLUDED_NoteskinOption
#include <NoteskinOption.h>
#endif
#ifndef INCLUDED_Option
#include <Option.h>
#endif
#ifndef INCLUDED_OptionsMenu
#include <OptionsMenu.h>
#endif
#ifndef INCLUDED_flixel_FlxBasic
#include <flixel/FlxBasic.h>
#endif
#ifndef INCLUDED_flixel_FlxG
#include <flixel/FlxG.h>
#endif
#ifndef INCLUDED_flixel_FlxState
#include <flixel/FlxState.h>
#endif
#ifndef INCLUDED_flixel_FlxSubState
#include <flixel/FlxSubState.h>
#endif
#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
#ifndef INCLUDED_flixel_util_FlxSave
#include <flixel/util/FlxSave.h>
#endif
#ifndef INCLUDED_flixel_util_IFlxDestroyable
#include <flixel/util/IFlxDestroyable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b5a3a6dff065627c_1875_new,"NoteskinOption","new",0xcdd94b56,"NoteskinOption.new","Options.hx",1875,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_b5a3a6dff065627c_1884_left,"NoteskinOption","left",0x4ef62451,"NoteskinOption.left","Options.hx",1884,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_b5a3a6dff065627c_1895_right,"NoteskinOption","right",0x3f76b052,"NoteskinOption.right","Options.hx",1895,0x9d9a0240)
HX_LOCAL_STACK_FRAME(_hx_pos_b5a3a6dff065627c_1907_getValue,"NoteskinOption","getValue",0x87ba9845,"NoteskinOption.getValue","Options.hx",1907,0x9d9a0240)

void NoteskinOption_obj::__construct(::String desc){
            	HX_STACKFRAME(&_hx_pos_b5a3a6dff065627c_1875_new)
HXLINE(1876)		super::__construct();
HXLINE(1877)		if (::OptionsMenu_obj::isInPause) {
HXLINE(1878)			this->description = HX_("This option cannot be toggled in the pause menu.",b4,21,dd,c9);
            		}
            		else {
HXLINE(1880)			this->description = desc;
            		}
            	}

Dynamic NoteskinOption_obj::__CreateEmpty() { return new NoteskinOption_obj; }

void *NoteskinOption_obj::_hx_vtable = 0;

Dynamic NoteskinOption_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< NoteskinOption_obj > _hx_result = new NoteskinOption_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool NoteskinOption_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x27a70eb9) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x27a70eb9;
	} else {
		return inClassId==(int)0x54032b24;
	}
}

bool NoteskinOption_obj::left(){
            	HX_STACKFRAME(&_hx_pos_b5a3a6dff065627c_1884_left)
HXLINE(1885)		if (::OptionsMenu_obj::isInPause) {
HXLINE(1886)			return false;
            		}
HXLINE(1887)		::hx::FieldRef((::flixel::FlxG_obj::save->data).mPtr,HX_("noteskin",6f,0f,af,70))--;
HXLINE(1888)		if (::hx::IsLess( ::flixel::FlxG_obj::save->data->__Field(HX_("noteskin",6f,0f,af,70),::hx::paccDynamic),0 )) {
HXLINE(1889)			::flixel::FlxG_obj::save->data->__SetField(HX_("noteskin",6f,0f,af,70),(::NoteskinHelpers_obj::getNoteskins()->length - 1),::hx::paccDynamic);
            		}
HXLINE(1890)		this->display = this->updateDisplay();
HXLINE(1891)		return true;
            	}


bool NoteskinOption_obj::right(){
            	HX_STACKFRAME(&_hx_pos_b5a3a6dff065627c_1895_right)
HXLINE(1896)		if (::OptionsMenu_obj::isInPause) {
HXLINE(1897)			return false;
            		}
HXLINE(1898)		::hx::FieldRef((::flixel::FlxG_obj::save->data).mPtr,HX_("noteskin",6f,0f,af,70))++;
HXLINE(1899)		 ::Dynamic _hx_tmp =  ::Dynamic(::flixel::FlxG_obj::save->data->__Field(HX_("noteskin",6f,0f,af,70),::hx::paccDynamic));
HXDLIN(1899)		if (::hx::IsGreater( _hx_tmp,(::NoteskinHelpers_obj::getNoteskins()->length - 1) )) {
HXLINE(1900)			::flixel::FlxG_obj::save->data->__SetField(HX_("noteskin",6f,0f,af,70),0,::hx::paccDynamic);
            		}
HXLINE(1901)		this->display = this->updateDisplay();
HXLINE(1902)		return true;
            	}


::String NoteskinOption_obj::getValue(){
            	HX_STACKFRAME(&_hx_pos_b5a3a6dff065627c_1907_getValue)
HXDLIN(1907)		return ((HX_("Current Noteskin: < ",00,ac,fb,f3) + ::NoteskinHelpers_obj::getNoteskinByID(( (int)(::flixel::FlxG_obj::save->data->__Field(HX_("noteskin",6f,0f,af,70),::hx::paccDynamic)) ))) + HX_(" >",1e,1c,00,00));
            	}



::hx::ObjectPtr< NoteskinOption_obj > NoteskinOption_obj::__new(::String desc) {
	::hx::ObjectPtr< NoteskinOption_obj > __this = new NoteskinOption_obj();
	__this->__construct(desc);
	return __this;
}

::hx::ObjectPtr< NoteskinOption_obj > NoteskinOption_obj::__alloc(::hx::Ctx *_hx_ctx,::String desc) {
	NoteskinOption_obj *__this = (NoteskinOption_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(NoteskinOption_obj), true, "NoteskinOption"));
	*(void **)__this = NoteskinOption_obj::_hx_vtable;
	__this->__construct(desc);
	return __this;
}

NoteskinOption_obj::NoteskinOption_obj()
{
}

::hx::Val NoteskinOption_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"left") ) { return ::hx::Val( left_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"right") ) { return ::hx::Val( right_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"getValue") ) { return ::hx::Val( getValue_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *NoteskinOption_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *NoteskinOption_obj_sStaticStorageInfo = 0;
#endif

static ::String NoteskinOption_obj_sMemberFields[] = {
	HX_("left",07,08,b0,47),
	HX_("right",dc,0b,64,e9),
	HX_("getValue",fb,8e,8f,91),
	::String(null()) };

::hx::Class NoteskinOption_obj::__mClass;

void NoteskinOption_obj::__register()
{
	NoteskinOption_obj _hx_dummy;
	NoteskinOption_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("NoteskinOption",64,a8,17,72);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(NoteskinOption_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< NoteskinOption_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NoteskinOption_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NoteskinOption_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

