// Generated by Haxe 4.1.5
#ifndef INCLUDED_Song
#define INCLUDED_Song

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Song)



class HXCPP_CLASS_ATTRIBUTES Song_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Song_obj OBJ_;
		Song_obj();

	public:
		enum { _hx_ClassId = 0x0b844619 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Song")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"Song"); }

		inline static ::hx::ObjectPtr< Song_obj > __new() {
			::hx::ObjectPtr< Song_obj > __this = new Song_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Song_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Song_obj *__this = (Song_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Song_obj), false, "Song"));
			*(void **)__this = Song_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Song_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Song",f5,4f,31,37); }

		static void __boot();
		static ::String latestChart;
		static  ::Dynamic loadFromJsonRAW(::String rawJson);
		static ::Dynamic loadFromJsonRAW_dyn();

		static  ::Dynamic loadFromJson(::String songId,::String difficulty);
		static ::Dynamic loadFromJson_dyn();

		static  ::Dynamic conversionChecks( ::Dynamic song);
		static ::Dynamic conversionChecks_dyn();

		static  ::Dynamic parseJSONshit(::String songId, ::Dynamic jsonData, ::Dynamic jsonMetaData);
		static ::Dynamic parseJSONshit_dyn();

};


#endif /* INCLUDED_Song */ 
