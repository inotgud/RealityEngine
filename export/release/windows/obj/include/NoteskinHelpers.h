// Generated by Haxe 4.1.5
#ifndef INCLUDED_NoteskinHelpers
#define INCLUDED_NoteskinHelpers

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(NoteskinHelpers)
HX_DECLARE_CLASS3(flixel,graphics,frames,FlxAtlasFrames)
HX_DECLARE_CLASS3(flixel,graphics,frames,FlxFramesCollection)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)



class HXCPP_CLASS_ATTRIBUTES NoteskinHelpers_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef NoteskinHelpers_obj OBJ_;
		NoteskinHelpers_obj();

	public:
		enum { _hx_ClassId = 0x0f23a4b6 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="NoteskinHelpers")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"NoteskinHelpers"); }

		inline static ::hx::ObjectPtr< NoteskinHelpers_obj > __new() {
			::hx::ObjectPtr< NoteskinHelpers_obj > __this = new NoteskinHelpers_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< NoteskinHelpers_obj > __alloc(::hx::Ctx *_hx_ctx) {
			NoteskinHelpers_obj *__this = (NoteskinHelpers_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(NoteskinHelpers_obj), false, "NoteskinHelpers"));
			*(void **)__this = NoteskinHelpers_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~NoteskinHelpers_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("NoteskinHelpers",76,bf,fc,42); }

		static void __boot();
		static ::Array< ::String > noteskinArray;
		static ::Array< ::String > xmlData;
		static ::Array< ::String > updateNoteskins();
		static ::Dynamic updateNoteskins_dyn();

		static ::Array< ::String > getNoteskins();
		static ::Dynamic getNoteskins_dyn();

		static ::String getNoteskinByID(int id);
		static ::Dynamic getNoteskinByID_dyn();

		static  ::flixel::graphics::frames::FlxAtlasFrames generateNoteskinSprite(int id);
		static ::Dynamic generateNoteskinSprite_dyn();

		static  ::openfl::display::BitmapData generatePixelSprite(int id,::hx::Null< bool >  ends);
		static ::Dynamic generatePixelSprite_dyn();

};


#endif /* INCLUDED_NoteskinHelpers */ 
