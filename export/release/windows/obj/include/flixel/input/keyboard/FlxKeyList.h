// Generated by Haxe 4.1.5
#ifndef INCLUDED_flixel_input_keyboard_FlxKeyList
#define INCLUDED_flixel_input_keyboard_FlxKeyList

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_input_FlxBaseKeyList
#include <flixel/input/FlxBaseKeyList.h>
#endif
HX_DECLARE_CLASS2(flixel,input,FlxBaseKeyList)
HX_DECLARE_CLASS2(flixel,input,FlxKeyManager)
HX_DECLARE_CLASS2(flixel,input,IFlxInputManager)
HX_DECLARE_CLASS3(flixel,input,keyboard,FlxKeyList)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)

namespace flixel{
namespace input{
namespace keyboard{


class HXCPP_CLASS_ATTRIBUTES FlxKeyList_obj : public  ::flixel::input::FlxBaseKeyList_obj
{
	public:
		typedef  ::flixel::input::FlxBaseKeyList_obj super;
		typedef FlxKeyList_obj OBJ_;
		FlxKeyList_obj();

	public:
		enum { _hx_ClassId = 0x23ee7f5c };

		void __construct(int status, ::flixel::input::FlxKeyManager keyManager);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.input.keyboard.FlxKeyList")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"flixel.input.keyboard.FlxKeyList"); }
		static ::hx::ObjectPtr< FlxKeyList_obj > __new(int status, ::flixel::input::FlxKeyManager keyManager);
		static ::hx::ObjectPtr< FlxKeyList_obj > __alloc(::hx::Ctx *_hx_ctx,int status, ::flixel::input::FlxKeyManager keyManager);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxKeyList_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxKeyList",6b,47,b8,d0); }

};

} // end namespace flixel
} // end namespace input
} // end namespace keyboard

#endif /* INCLUDED_flixel_input_keyboard_FlxKeyList */ 
