// Generated by Haxe 4.1.5
#ifndef INCLUDED_openfl_events_ActivityEvent
#define INCLUDED_openfl_events_ActivityEvent

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif
HX_DECLARE_STACK_FRAME(_hx_pos_07ba67a8dcdbfa28_63_new)
HX_DECLARE_CLASS2(openfl,events,ActivityEvent)
HX_DECLARE_CLASS2(openfl,events,Event)

namespace openfl{
namespace events{


class HXCPP_CLASS_ATTRIBUTES ActivityEvent_obj : public  ::openfl::events::Event_obj
{
	public:
		typedef  ::openfl::events::Event_obj super;
		typedef ActivityEvent_obj OBJ_;
		ActivityEvent_obj();

	public:
		enum { _hx_ClassId = 0x11188ee2 };

		void __construct(::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::hx::Null< bool >  __o_activating);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="openfl.events.ActivityEvent")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"openfl.events.ActivityEvent"); }

		inline static ::hx::ObjectPtr< ActivityEvent_obj > __new(::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::hx::Null< bool >  __o_activating) {
			::hx::ObjectPtr< ActivityEvent_obj > __this = new ActivityEvent_obj();
			__this->__construct(type,__o_bubbles,__o_cancelable,__o_activating);
			return __this;
		}

		inline static ::hx::ObjectPtr< ActivityEvent_obj > __alloc(::hx::Ctx *_hx_ctx,::String type,::hx::Null< bool >  __o_bubbles,::hx::Null< bool >  __o_cancelable,::hx::Null< bool >  __o_activating) {
			ActivityEvent_obj *__this = (ActivityEvent_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(ActivityEvent_obj), true, "openfl.events.ActivityEvent"));
			*(void **)__this = ActivityEvent_obj::_hx_vtable;
{
            		bool bubbles = __o_bubbles.Default(false);
            		bool cancelable = __o_cancelable.Default(false);
            		bool activating = __o_activating.Default(false);
            	HX_STACKFRAME(&_hx_pos_07ba67a8dcdbfa28_63_new)
HXLINE(  64)		__this->super::__construct(type,bubbles,cancelable);
HXLINE(  66)		( ( ::openfl::events::ActivityEvent)(__this) )->activating = activating;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~ActivityEvent_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("ActivityEvent",ab,eb,0c,59); }

		bool activating;
};

} // end namespace openfl
} // end namespace events

#endif /* INCLUDED_openfl_events_ActivityEvent */ 
