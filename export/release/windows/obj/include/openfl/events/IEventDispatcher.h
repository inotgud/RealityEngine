// Generated by Haxe 4.1.5
#ifndef INCLUDED_openfl_events_IEventDispatcher
#define INCLUDED_openfl_events_IEventDispatcher

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace openfl{
namespace events{


class HXCPP_CLASS_ATTRIBUTES IEventDispatcher_obj {
	public:
		typedef ::hx::Object super;
		HX_DO_INTERFACE_RTTI;

		void (::hx::Object :: *_hx_removeEventListener)(::String type, ::Dynamic listener,::hx::Null< bool >  useCapture); 
		static inline void removeEventListener( ::Dynamic _hx_,::String type, ::Dynamic listener,::hx::Null< bool >  useCapture) {
			(_hx_.mPtr->*( ::hx::interface_cast< ::openfl::events::IEventDispatcher_obj *>(_hx_.mPtr->_hx_getInterface(0x87530281)))->_hx_removeEventListener)(type,listener,useCapture);
		}
};

} // end namespace openfl
} // end namespace events

#endif /* INCLUDED_openfl_events_IEventDispatcher */ 
