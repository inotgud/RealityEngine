// Generated by Haxe 4.1.5
#ifndef INCLUDED_MainMenuState
#define INCLUDED_MainMenuState

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_MusicBeatState
#include <MusicBeatState.h>
#endif
HX_DECLARE_CLASS0(Character)
HX_DECLARE_CLASS0(MainMenuState)
HX_DECLARE_CLASS0(MusicBeatState)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,IFlxBasic)
HX_DECLARE_CLASS1(flixel,IFlxSprite)
HX_DECLARE_CLASS3(flixel,addons,transition,FlxTransitionableState)
HX_DECLARE_CLASS3(flixel,addons,transition,TransitionData)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxInputText)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxUIInputText)
HX_DECLARE_CLASS3(flixel,addons,ui,FlxUIState)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IEventGetter)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IFlxUIState)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IFlxUIWidget)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IHasParams)
HX_DECLARE_CLASS4(flixel,addons,ui,interfaces,IResizable)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,input,IFlxInput)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,ui,FlxButton)
HX_DECLARE_CLASS2(flixel,ui,FlxTypedButton_flixel_text_FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS1(hscript,Interp)



class HXCPP_CLASS_ATTRIBUTES MainMenuState_obj : public  ::MusicBeatState_obj
{
	public:
		typedef  ::MusicBeatState_obj super;
		typedef MainMenuState_obj OBJ_;
		MainMenuState_obj();

	public:
		enum { _hx_ClassId = 0x6915cded };

		void __construct( ::flixel::addons::transition::TransitionData TransIn, ::flixel::addons::transition::TransitionData TransOut);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="MainMenuState")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"MainMenuState"); }
		static ::hx::ObjectPtr< MainMenuState_obj > __new( ::flixel::addons::transition::TransitionData TransIn, ::flixel::addons::transition::TransitionData TransOut);
		static ::hx::ObjectPtr< MainMenuState_obj > __alloc(::hx::Ctx *_hx_ctx, ::flixel::addons::transition::TransitionData TransIn, ::flixel::addons::transition::TransitionData TransOut);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~MainMenuState_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("MainMenuState",59,88,5e,20); }

		static void __boot();
		static ::String language;
		static ::String hmmmmmmmmmmmmmmmm;
		static bool Editorsnull;
		static bool redesignedmenustyle;
		static bool Editorsmainyes;
		static bool firstStart;
		static  ::hscript::Interp interp;
		static ::String nightly;
		static ::String RealityEngineVer;
		static ::String gameVer;
		static bool finishedFunnyMove;
		int curSelected;
		bool updateAvailable;
		 ::flixel::FlxSprite bg2;
		bool its;
		 ::Character char1;
		 ::flixel::text::FlxText textt;
		 ::flixel::text::FlxText textt2;
		 ::flixel::text::FlxText textt3;
		 ::flixel::text::FlxText textt4;
		 ::flixel::ui::FlxButton button;
		 ::flixel::ui::FlxButton button2;
		 ::flixel::group::FlxTypedGroup menuItems;
		 ::hscript::Interp interp2;
		::Array< ::String > optionShit;
		 ::flixel::text::FlxText newGaming;
		 ::flixel::text::FlxText newGaming2;
		 ::flixel::FlxSprite magenta;
		 ::flixel::FlxObject camFollow;
		 ::flixel::FlxObject camFollowPos;
		bool isConsole;
		void create();

		void OnClickButton();
		::Dynamic OnClickButton_dyn();

		bool selectedSomethin;
		 ::flixel::text::FlxText selec;
		void update(Float elapsed);

		 ::flixel::addons::ui::FlxUIInputText eventNa;
		void openKeybinds();
		::Dynamic openKeybinds_dyn();

		void openConsole();
		::Dynamic openConsole_dyn();

		void useCommand();
		::Dynamic useCommand_dyn();

		void addNewMenu();
		::Dynamic addNewMenu_dyn();

		void goToState();
		::Dynamic goToState_dyn();

		void changeItem(::hx::Null< int >  huh);
		::Dynamic changeItem_dyn();

		 ::Dynamic callOnHscript(::String functionToCall,::cpp::VirtualArray params);
		::Dynamic callOnHscript_dyn();

		 ::Dynamic callOnHscript2(::String functionToCall,::cpp::VirtualArray params);
		::Dynamic callOnHscript2_dyn();

};


#endif /* INCLUDED_MainMenuState */ 
