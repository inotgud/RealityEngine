// Generated by Haxe 4.1.5
#ifndef INCLUDED_EditorsMain
#define INCLUDED_EditorsMain

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_MusicBeatSubstate
#include <MusicBeatSubstate.h>
#endif
HX_DECLARE_CLASS0(EditorsMain)
HX_DECLARE_CLASS0(MusicBeatSubstate)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS1(flixel,FlxState)
HX_DECLARE_CLASS1(flixel,FlxSubState)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES EditorsMain_obj : public  ::MusicBeatSubstate_obj
{
	public:
		typedef  ::MusicBeatSubstate_obj super;
		typedef EditorsMain_obj OBJ_;
		EditorsMain_obj();

	public:
		enum { _hx_ClassId = 0x02a6829f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="EditorsMain")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"EditorsMain"); }
		static ::hx::ObjectPtr< EditorsMain_obj > __new();
		static ::hx::ObjectPtr< EditorsMain_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~EditorsMain_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("EditorsMain",5f,3d,ab,4f); }

		 ::flixel::FlxSprite bg2;
		 ::flixel::FlxSprite bg3;
		 ::flixel::FlxSprite bg;
		void create();

		void update(Float elapsed);

		void stageEditorFunc();
		::Dynamic stageEditorFunc_dyn();

};


#endif /* INCLUDED_EditorsMain */ 
