// Generated by Haxe 4.1.5
#ifndef INCLUDED_OptionCata
#define INCLUDED_OptionCata

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_FlxSprite
#include <flixel/FlxSprite.h>
#endif
HX_DECLARE_CLASS0(Option)
HX_DECLARE_CLASS0(OptionCata)
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)



class HXCPP_CLASS_ATTRIBUTES OptionCata_obj : public  ::flixel::FlxSprite_obj
{
	public:
		typedef  ::flixel::FlxSprite_obj super;
		typedef OptionCata_obj OBJ_;
		OptionCata_obj();

	public:
		enum { _hx_ClassId = 0x142bb148 };

		void __construct(Float x,Float y,::String _title,::Array< ::Dynamic> _options,::hx::Null< bool >  __o_middleType);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="OptionCata")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"OptionCata"); }
		static ::hx::ObjectPtr< OptionCata_obj > __new(Float x,Float y,::String _title,::Array< ::Dynamic> _options,::hx::Null< bool >  __o_middleType);
		static ::hx::ObjectPtr< OptionCata_obj > __alloc(::hx::Ctx *_hx_ctx,Float x,Float y,::String _title,::Array< ::Dynamic> _options,::hx::Null< bool >  __o_middleType);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~OptionCata_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("OptionCata",c0,81,06,7e); }

		::String title;
		::Array< ::Dynamic> options;
		 ::flixel::group::FlxTypedGroup optionObjects;
		 ::flixel::text::FlxText titleObject;
		bool middle;
		void changeColor(int color);
		::Dynamic changeColor_dyn();

};


#endif /* INCLUDED_OptionCata */ 
