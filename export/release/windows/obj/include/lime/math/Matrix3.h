// Generated by Haxe 4.1.5
#ifndef INCLUDED_lime_math_Matrix3
#define INCLUDED_lime_math_Matrix3

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_21e31708d26ee405_68_new)
HX_DECLARE_CLASS2(lime,math,Matrix3)

namespace lime{
namespace math{


class HXCPP_CLASS_ATTRIBUTES Matrix3_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Matrix3_obj OBJ_;
		Matrix3_obj();

	public:
		enum { _hx_ClassId = 0x43302551 };

		void __construct(::hx::Null< Float >  __o_a,::hx::Null< Float >  __o_b,::hx::Null< Float >  __o_c,::hx::Null< Float >  __o_d,::hx::Null< Float >  __o_tx,::hx::Null< Float >  __o_ty);
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime.math.Matrix3")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"lime.math.Matrix3"); }

		inline static ::hx::ObjectPtr< Matrix3_obj > __new(::hx::Null< Float >  __o_a,::hx::Null< Float >  __o_b,::hx::Null< Float >  __o_c,::hx::Null< Float >  __o_d,::hx::Null< Float >  __o_tx,::hx::Null< Float >  __o_ty) {
			::hx::ObjectPtr< Matrix3_obj > __this = new Matrix3_obj();
			__this->__construct(__o_a,__o_b,__o_c,__o_d,__o_tx,__o_ty);
			return __this;
		}

		inline static ::hx::ObjectPtr< Matrix3_obj > __alloc(::hx::Ctx *_hx_ctx,::hx::Null< Float >  __o_a,::hx::Null< Float >  __o_b,::hx::Null< Float >  __o_c,::hx::Null< Float >  __o_d,::hx::Null< Float >  __o_tx,::hx::Null< Float >  __o_ty) {
			Matrix3_obj *__this = (Matrix3_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Matrix3_obj), false, "lime.math.Matrix3"));
			*(void **)__this = Matrix3_obj::_hx_vtable;
{
            		Float a = __o_a.Default(1);
            		Float b = __o_b.Default(0);
            		Float c = __o_c.Default(0);
            		Float d = __o_d.Default(1);
            		Float tx = __o_tx.Default(0);
            		Float ty = __o_ty.Default(0);
            	HX_STACKFRAME(&_hx_pos_21e31708d26ee405_68_new)
HXLINE(  69)		( ( ::lime::math::Matrix3)(__this) )->a = a;
HXLINE(  70)		( ( ::lime::math::Matrix3)(__this) )->b = b;
HXLINE(  71)		( ( ::lime::math::Matrix3)(__this) )->c = c;
HXLINE(  72)		( ( ::lime::math::Matrix3)(__this) )->d = d;
HXLINE(  73)		( ( ::lime::math::Matrix3)(__this) )->tx = tx;
HXLINE(  74)		( ( ::lime::math::Matrix3)(__this) )->ty = ty;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Matrix3_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Matrix3",b2,6a,b8,60); }

		Float a;
		Float b;
		Float c;
		Float d;
		Float tx;
		Float ty;
		void identity();
		::Dynamic identity_dyn();

};

} // end namespace lime
} // end namespace math

#endif /* INCLUDED_lime_math_Matrix3 */ 
